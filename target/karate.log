13:19:01.089 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
13:19:01.102 [pool-1-thread-1] INFO  com.intuit.karate - found scenario at line: 7 - ^get all users and then get the first user by id$
13:19:01.387 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
13:19:02.298 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET https://jsonplaceholder.typicode.com/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: jsonplaceholder.typicode.com
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

13:19:04.125 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 1812.85
1 < 200
1 < Access-Control-Allow-Credentials: true
1 < Age: 6198
1 < CF-Cache-Status: HIT
1 < CF-RAY: 57c03b615f71e33e-CCU
1 < Cache-Control: max-age=14400
1 < Connection: keep-alive
1 < Content-Type: application/json; charset=utf-8
1 < Date: Mon, 30 Mar 2020 07:49:04 GMT
1 < Etag: W/"160d-1eMSsxeJRfnVLRBmYJSbCiJZ1qQ"
1 < Expect-CT: max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
1 < Expires: -1
1 < Pragma: no-cache
1 < Server: cloudflare
1 < Set-Cookie: __cfduid=dcca80c03b4dbbb5bc9b3ba552fe66d221585554544; expires=Wed, 29-Apr-20 07:49:04 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax
1 < Transfer-Encoding: chunked
1 < Vary: Origin, Accept-Encoding
1 < Via: 1.1 vegur
1 < X-Content-Type-Options: nosniff
1 < X-Powered-By: Express
[
  {
    "id": 1,
    "name": "Leanne Graham",
    "username": "Bret",
    "email": "Sincere@april.biz",
    "address": {
      "street": "Kulas Light",
      "suite": "Apt. 556",
      "city": "Gwenborough",
      "zipcode": "92998-3874",
      "geo": {
        "lat": "-37.3159",
        "lng": "81.1496"
      }
    },
    "phone": "1-770-736-8031 x56442",
    "website": "hildegard.org",
    "company": {
      "name": "Romaguera-Crona",
      "catchPhrase": "Multi-layered client-server neural-net",
      "bs": "harness real-time e-markets"
    }
  },
  {
    "id": 2,
    "name": "Ervin Howell",
    "username": "Antonette",
    "email": "Shanna@melissa.tv",
    "address": {
      "street": "Victor Plains",
      "suite": "Suite 879",
      "city": "Wisokyburgh",
      "zipcode": "90566-7771",
      "geo": {
        "lat": "-43.9509",
        "lng": "-34.4618"
      }
    },
    "phone": "010-692-6593 x09125",
    "website": "anastasia.net",
    "company": {
      "name": "Deckow-Crist",
      "catchPhrase": "Proactive didactic contingency",
      "bs": "synergize scalable supply-chains"
    }
  },
  {
    "id": 3,
    "name": "Clementine Bauch",
    "username": "Samantha",
    "email": "Nathan@yesenia.net",
    "address": {
      "street": "Douglas Extension",
      "suite": "Suite 847",
      "city": "McKenziehaven",
      "zipcode": "59590-4157",
      "geo": {
        "lat": "-68.6102",
        "lng": "-47.0653"
      }
    },
    "phone": "1-463-123-4447",
    "website": "ramiro.info",
    "company": {
      "name": "Romaguera-Jacobson",
      "catchPhrase": "Face to face bifurcated interface",
      "bs": "e-enable strategic applications"
    }
  },
  {
    "id": 4,
    "name": "Patricia Lebsack",
    "username": "Karianne",
    "email": "Julianne.OConner@kory.org",
    "address": {
      "street": "Hoeger Mall",
      "suite": "Apt. 692",
      "city": "South Elvis",
      "zipcode": "53919-4257",
      "geo": {
        "lat": "29.4572",
        "lng": "-164.2990"
      }
    },
    "phone": "493-170-9623 x156",
    "website": "kale.biz",
    "company": {
      "name": "Robel-Corkery",
      "catchPhrase": "Multi-tiered zero tolerance productivity",
      "bs": "transition cutting-edge web services"
    }
  },
  {
    "id": 5,
    "name": "Chelsey Dietrich",
    "username": "Kamren",
    "email": "Lucio_Hettinger@annie.ca",
    "address": {
      "street": "Skiles Walks",
      "suite": "Suite 351",
      "city": "Roscoeview",
      "zipcode": "33263",
      "geo": {
        "lat": "-31.8129",
        "lng": "62.5342"
      }
    },
    "phone": "(254)954-1289",
    "website": "demarco.info",
    "company": {
      "name": "Keebler LLC",
      "catchPhrase": "User-centric fault-tolerant solution",
      "bs": "revolutionize end-to-end systems"
    }
  },
  {
    "id": 6,
    "name": "Mrs. Dennis Schulist",
    "username": "Leopoldo_Corkery",
    "email": "Karley_Dach@jasper.info",
    "address": {
      "street": "Norberto Crossing",
      "suite": "Apt. 950",
      "city": "South Christy",
      "zipcode": "23505-1337",
      "geo": {
        "lat": "-71.4197",
        "lng": "71.7478"
      }
    },
    "phone": "1-477-935-8478 x6430",
    "website": "ola.org",
    "company": {
      "name": "Considine-Lockman",
      "catchPhrase": "Synchronised bottom-line interface",
      "bs": "e-enable innovative applications"
    }
  },
  {
    "id": 7,
    "name": "Kurtis Weissnat",
    "username": "Elwyn.Skiles",
    "email": "Telly.Hoeger@billy.biz",
    "address": {
      "street": "Rex Trail",
      "suite": "Suite 280",
      "city": "Howemouth",
      "zipcode": "58804-1099",
      "geo": {
        "lat": "24.8918",
        "lng": "21.8984"
      }
    },
    "phone": "210.067.6132",
    "website": "elvis.io",
    "company": {
      "name": "Johns Group",
      "catchPhrase": "Configurable multimedia task-force",
      "bs": "generate enterprise e-tailers"
    }
  },
  {
    "id": 8,
    "name": "Nicholas Runolfsdottir V",
    "username": "Maxime_Nienow",
    "email": "Sherwood@rosamond.me",
    "address": {
      "street": "Ellsworth Summit",
      "suite": "Suite 729",
      "city": "Aliyaview",
      "zipcode": "45169",
      "geo": {
        "lat": "-14.3990",
        "lng": "-120.7677"
      }
    },
    "phone": "586.493.6943 x140",
    "website": "jacynthe.com",
    "company": {
      "name": "Abernathy Group",
      "catchPhrase": "Implemented secondary concept",
      "bs": "e-enable extensible e-tailers"
    }
  },
  {
    "id": 9,
    "name": "Glenna Reichert",
    "username": "Delphine",
    "email": "Chaim_McDermott@dana.io",
    "address": {
      "street": "Dayna Park",
      "suite": "Suite 449",
      "city": "Bartholomebury",
      "zipcode": "76495-3109",
      "geo": {
        "lat": "24.6463",
        "lng": "-168.8889"
      }
    },
    "phone": "(775)976-6794 x41206",
    "website": "conrad.com",
    "company": {
      "name": "Yost and Sons",
      "catchPhrase": "Switchable contextually-based project",
      "bs": "aggregate real-time technologies"
    }
  },
  {
    "id": 10,
    "name": "Clementina DuBuque",
    "username": "Moriah.Stanton",
    "email": "Rey.Padberg@karina.biz",
    "address": {
      "street": "Kattie Turnpike",
      "suite": "Suite 198",
      "city": "Lebsackbury",
      "zipcode": "31428-2261",
      "geo": {
        "lat": "-38.2386",
        "lng": "57.2232"
      }
    },
    "phone": "024-648-3804",
    "website": "ambrose.net",
    "company": {
      "name": "Hoeger LLC",
      "catchPhrase": "Centralized empowering task-force",
      "bs": "target end-to-end models"
    }
  }
]

13:19:04.212 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
2 > GET https://jsonplaceholder.typicode.com/users/1
2 > Accept-Encoding: gzip,deflate
2 > Connection: Keep-Alive
2 > Cookie: __cfduid=dcca80c03b4dbbb5bc9b3ba552fe66d221585554544
2 > Host: jsonplaceholder.typicode.com
2 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

13:19:34.685 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - java.net.SocketTimeoutException: Read timed out, http call failed after 30469 milliseconds for URL: https://jsonplaceholder.typicode.com/users/1
13:19:34.685 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - http request failed: 
java.net.SocketTimeoutException: Read timed out
13:19:34.935 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
13:20:30.049 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
13:20:30.339 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
13:20:31.346 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET https://jsonplaceholder.typicode.com/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: jsonplaceholder.typicode.com
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

13:20:32.783 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 1430.72
1 < 200
1 < Access-Control-Allow-Credentials: true
1 < Age: 6287
1 < CF-Cache-Status: HIT
1 < CF-RAY: 57c03d8c7931e302-CCU
1 < Cache-Control: max-age=14400
1 < Connection: keep-alive
1 < Content-Type: application/json; charset=utf-8
1 < Date: Mon, 30 Mar 2020 07:50:33 GMT
1 < Etag: W/"160d-1eMSsxeJRfnVLRBmYJSbCiJZ1qQ"
1 < Expect-CT: max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
1 < Expires: -1
1 < Pragma: no-cache
1 < Server: cloudflare
1 < Set-Cookie: __cfduid=dbf52c52ae910d01cfea7ccd2f70e02761585554633; expires=Wed, 29-Apr-20 07:50:33 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax
1 < Transfer-Encoding: chunked
1 < Vary: Origin, Accept-Encoding
1 < Via: 1.1 vegur
1 < X-Content-Type-Options: nosniff
1 < X-Powered-By: Express
[
  {
    "id": 1,
    "name": "Leanne Graham",
    "username": "Bret",
    "email": "Sincere@april.biz",
    "address": {
      "street": "Kulas Light",
      "suite": "Apt. 556",
      "city": "Gwenborough",
      "zipcode": "92998-3874",
      "geo": {
        "lat": "-37.3159",
        "lng": "81.1496"
      }
    },
    "phone": "1-770-736-8031 x56442",
    "website": "hildegard.org",
    "company": {
      "name": "Romaguera-Crona",
      "catchPhrase": "Multi-layered client-server neural-net",
      "bs": "harness real-time e-markets"
    }
  },
  {
    "id": 2,
    "name": "Ervin Howell",
    "username": "Antonette",
    "email": "Shanna@melissa.tv",
    "address": {
      "street": "Victor Plains",
      "suite": "Suite 879",
      "city": "Wisokyburgh",
      "zipcode": "90566-7771",
      "geo": {
        "lat": "-43.9509",
        "lng": "-34.4618"
      }
    },
    "phone": "010-692-6593 x09125",
    "website": "anastasia.net",
    "company": {
      "name": "Deckow-Crist",
      "catchPhrase": "Proactive didactic contingency",
      "bs": "synergize scalable supply-chains"
    }
  },
  {
    "id": 3,
    "name": "Clementine Bauch",
    "username": "Samantha",
    "email": "Nathan@yesenia.net",
    "address": {
      "street": "Douglas Extension",
      "suite": "Suite 847",
      "city": "McKenziehaven",
      "zipcode": "59590-4157",
      "geo": {
        "lat": "-68.6102",
        "lng": "-47.0653"
      }
    },
    "phone": "1-463-123-4447",
    "website": "ramiro.info",
    "company": {
      "name": "Romaguera-Jacobson",
      "catchPhrase": "Face to face bifurcated interface",
      "bs": "e-enable strategic applications"
    }
  },
  {
    "id": 4,
    "name": "Patricia Lebsack",
    "username": "Karianne",
    "email": "Julianne.OConner@kory.org",
    "address": {
      "street": "Hoeger Mall",
      "suite": "Apt. 692",
      "city": "South Elvis",
      "zipcode": "53919-4257",
      "geo": {
        "lat": "29.4572",
        "lng": "-164.2990"
      }
    },
    "phone": "493-170-9623 x156",
    "website": "kale.biz",
    "company": {
      "name": "Robel-Corkery",
      "catchPhrase": "Multi-tiered zero tolerance productivity",
      "bs": "transition cutting-edge web services"
    }
  },
  {
    "id": 5,
    "name": "Chelsey Dietrich",
    "username": "Kamren",
    "email": "Lucio_Hettinger@annie.ca",
    "address": {
      "street": "Skiles Walks",
      "suite": "Suite 351",
      "city": "Roscoeview",
      "zipcode": "33263",
      "geo": {
        "lat": "-31.8129",
        "lng": "62.5342"
      }
    },
    "phone": "(254)954-1289",
    "website": "demarco.info",
    "company": {
      "name": "Keebler LLC",
      "catchPhrase": "User-centric fault-tolerant solution",
      "bs": "revolutionize end-to-end systems"
    }
  },
  {
    "id": 6,
    "name": "Mrs. Dennis Schulist",
    "username": "Leopoldo_Corkery",
    "email": "Karley_Dach@jasper.info",
    "address": {
      "street": "Norberto Crossing",
      "suite": "Apt. 950",
      "city": "South Christy",
      "zipcode": "23505-1337",
      "geo": {
        "lat": "-71.4197",
        "lng": "71.7478"
      }
    },
    "phone": "1-477-935-8478 x6430",
    "website": "ola.org",
    "company": {
      "name": "Considine-Lockman",
      "catchPhrase": "Synchronised bottom-line interface",
      "bs": "e-enable innovative applications"
    }
  },
  {
    "id": 7,
    "name": "Kurtis Weissnat",
    "username": "Elwyn.Skiles",
    "email": "Telly.Hoeger@billy.biz",
    "address": {
      "street": "Rex Trail",
      "suite": "Suite 280",
      "city": "Howemouth",
      "zipcode": "58804-1099",
      "geo": {
        "lat": "24.8918",
        "lng": "21.8984"
      }
    },
    "phone": "210.067.6132",
    "website": "elvis.io",
    "company": {
      "name": "Johns Group",
      "catchPhrase": "Configurable multimedia task-force",
      "bs": "generate enterprise e-tailers"
    }
  },
  {
    "id": 8,
    "name": "Nicholas Runolfsdottir V",
    "username": "Maxime_Nienow",
    "email": "Sherwood@rosamond.me",
    "address": {
      "street": "Ellsworth Summit",
      "suite": "Suite 729",
      "city": "Aliyaview",
      "zipcode": "45169",
      "geo": {
        "lat": "-14.3990",
        "lng": "-120.7677"
      }
    },
    "phone": "586.493.6943 x140",
    "website": "jacynthe.com",
    "company": {
      "name": "Abernathy Group",
      "catchPhrase": "Implemented secondary concept",
      "bs": "e-enable extensible e-tailers"
    }
  },
  {
    "id": 9,
    "name": "Glenna Reichert",
    "username": "Delphine",
    "email": "Chaim_McDermott@dana.io",
    "address": {
      "street": "Dayna Park",
      "suite": "Suite 449",
      "city": "Bartholomebury",
      "zipcode": "76495-3109",
      "geo": {
        "lat": "24.6463",
        "lng": "-168.8889"
      }
    },
    "phone": "(775)976-6794 x41206",
    "website": "conrad.com",
    "company": {
      "name": "Yost and Sons",
      "catchPhrase": "Switchable contextually-based project",
      "bs": "aggregate real-time technologies"
    }
  },
  {
    "id": 10,
    "name": "Clementina DuBuque",
    "username": "Moriah.Stanton",
    "email": "Rey.Padberg@karina.biz",
    "address": {
      "street": "Kattie Turnpike",
      "suite": "Suite 198",
      "city": "Lebsackbury",
      "zipcode": "31428-2261",
      "geo": {
        "lat": "-38.2386",
        "lng": "57.2232"
      }
    },
    "phone": "024-648-3804",
    "website": "ambrose.net",
    "company": {
      "name": "Hoeger LLC",
      "catchPhrase": "Centralized empowering task-force",
      "bs": "target end-to-end models"
    }
  }
]

13:20:32.845 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
2 > GET https://jsonplaceholder.typicode.com/users/1
2 > Accept-Encoding: gzip,deflate
2 > Connection: Keep-Alive
2 > Cookie: __cfduid=dbf52c52ae910d01cfea7ccd2f70e02761585554633
2 > Host: jsonplaceholder.typicode.com
2 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

13:21:03.361 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - java.net.SocketTimeoutException: Read timed out, http call failed after 30516 milliseconds for URL: https://jsonplaceholder.typicode.com/users/1
13:21:03.362 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - http request failed: 
java.net.SocketTimeoutException: Read timed out
13:21:03.402 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
13:21:03.426 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > POST https://jsonplaceholder.typicode.com/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 160
1 > Content-Type: application/json; charset=UTF-8
1 > Host: jsonplaceholder.typicode.com
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"Test User","username":"testuser","email":"test@user.com","address":{"street":"Has No Name","suite":"Apt. 123","city":"Electri","zipcode":"54321-6789"}}

13:21:31.930 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 28503.04
1 < 201
1 < Access-Control-Allow-Credentials: true
1 < Access-Control-Expose-Headers: Location
1 < CF-Cache-Status: DYNAMIC
1 < CF-RAY: 57c03e4e9b01e32a-CCU
1 < Cache-Control: no-cache
1 < Connection: keep-alive
1 < Content-Length: 216
1 < Content-Type: application/json; charset=utf-8
1 < Date: Mon, 30 Mar 2020 07:51:32 GMT
1 < Etag: W/"d8-pYV7+YuMGP2hxHPU9ARrf97ifDA"
1 < Expect-CT: max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
1 < Expires: -1
1 < Location: http://jsonplaceholder.typicode.com/users/11
1 < Pragma: no-cache
1 < Server: cloudflare
1 < Set-Cookie: __cfduid=dd4eee07a30166f03f3f88dc404029a421585554664; expires=Wed, 29-Apr-20 07:51:04 GMT; path=/; domain=.typicode.com; HttpOnly; SameSite=Lax
1 < Vary: Origin, X-HTTP-Method-Override, Accept-Encoding
1 < Via: 1.1 vegur
1 < X-Content-Type-Options: nosniff
1 < X-Powered-By: Express
{
  "name": "Test User",
  "username": "testuser",
  "email": "test@user.com",
  "address": {
    "street": "Has No Name",
    "suite": "Apt. 123",
    "city": "Electri",
    "zipcode": "54321-6789"
  },
  "id": 11
}

13:21:31.959 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - [print] created id is:  11
13:21:32.113 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
13:33:19.930 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
13:33:20.234 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
13:33:21.881 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/users/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

13:33:22.102 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 199.79
1 < 404
1 < Content-Length: 232
1 < Content-Type: text/html
1 < Date: Mon, 30 Mar 2020 08:03:22 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>


13:33:22.641 [ForkJoinPool-1-worker-1] WARN  com.intuit.karate - xml parsing failed, response data type set to string: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 55; White spaces are required between publicId and systemId.
13:33:22.642 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - status code was: 404, expected: 200, response time: 200, url: http://127.0.0.1:5000/users/users, response: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

13:33:22.931 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
13:33:42.786 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
13:33:43.125 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
13:33:44.902 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

13:33:44.950 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 44.85
1 < 200
1 < Content-Length: 402
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 08:03:44 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
[
  {
    "email": "balaji@gmail.com", 
    "id": 1, 
    "name": "balaji", 
    "password": "sai"
  }, 
  {
    "email": "ram@gmail.com", 
    "id": 2, 
    "name": "ram", 
    "password": "sai"
  }, 
  {
    "email": "Lusy12@gmail.com", 
    "id": 3, 
    "name": "Lusy", 
    "password": "1234we"
  }, 
  {
    "email": "string", 
    "id": 5, 
    "name": "string", 
    "password": "string"
  }
]


13:33:45.100 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<pass>> feature 1 of 1: src/test/java/examples/users/users.feature
13:38:23.826 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
13:38:24.095 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
13:38:25.469 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/users/1
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

13:38:25.508 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 35.28
1 < 404
1 < Content-Length: 232
1 < Content-Type: text/html
1 < Date: Mon, 30 Mar 2020 08:08:25 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>


13:38:25.530 [ForkJoinPool-1-worker-1] WARN  com.intuit.karate - xml parsing failed, response data type set to string: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 55; White spaces are required between publicId and systemId.
13:38:25.537 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - status code was: 404, expected: 200, response time: 35, url: http://127.0.0.1:5000/users/1, response: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

13:38:25.709 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
13:38:51.472 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
13:38:51.772 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
13:38:52.785 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/users/1
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

13:38:52.822 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 31.76
1 < 404
1 < Content-Length: 232
1 < Content-Type: text/html
1 < Date: Mon, 30 Mar 2020 08:08:52 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>


13:38:52.840 [ForkJoinPool-1-worker-1] WARN  com.intuit.karate - xml parsing failed, response data type set to string: org.xml.sax.SAXParseException; lineNumber: 1; columnNumber: 55; White spaces are required between publicId and systemId.
13:38:52.840 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - status code was: 404, expected: 200, response time: 32, url: http://127.0.0.1:5000/users/1, response: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<title>404 Not Found</title>
<h1>Not Found</h1>
<p>The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.</p>

13:38:53.011 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
13:39:19.872 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
13:39:20.155 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
13:39:21.606 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

13:39:21.667 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 56.83
1 < 200
1 < Content-Length: 402
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 08:09:21 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
[
  {
    "email": "balaji@gmail.com", 
    "id": 1, 
    "name": "balaji", 
    "password": "sai"
  }, 
  {
    "email": "ram@gmail.com", 
    "id": 2, 
    "name": "ram", 
    "password": "sai"
  }, 
  {
    "email": "Lusy12@gmail.com", 
    "id": 3, 
    "name": "Lusy", 
    "password": "1234we"
  }, 
  {
    "email": "string", 
    "id": 5, 
    "name": "string", 
    "password": "string"
  }
]


13:39:21.790 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<pass>> feature 1 of 1: src/test/java/examples/users/users.feature
13:47:45.041 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
13:47:45.324 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
13:47:45.697 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
13:48:19.549 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
13:48:19.800 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
13:48:20.178 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
13:53:17.416 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
13:53:17.671 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
13:53:18.783 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - org.apache.http.client.ClientProtocolException, http call failed after 0 milliseconds for URL: users
13:53:18.783 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - http request failed: 
org.apache.http.client.ClientProtocolException
13:53:18.946 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
13:54:03.544 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
13:54:03.801 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
13:54:04.853 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > POST http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 66
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"John Smith","email":"john@gmail.com","password":"balaji"}

13:54:04.934 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 74.11
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 08:24:04 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Created Successfully

13:54:05.079 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<pass>> feature 1 of 1: src/test/java/examples/users/users.feature
13:55:22.315 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
13:55:22.551 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
13:55:23.532 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > POST http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 63
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"JSmith","email":"smith@gmail.com","password":"balaji"}

13:55:23.580 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 39.69
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 08:25:23 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Created Successfully

13:55:23.583 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - assertion failed: path: $, actual: 'User Created Successfully', expected: '{"name":"#notnull"}', reason: not a sub-string
13:55:23.700 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
13:57:02.919 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
13:57:03.196 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
13:57:04.110 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > POST http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 58
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"jack","email":"jack@gmail.com","password":"jack"}

13:57:04.165 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 44.46
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 08:27:04 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Created Successfully

13:57:04.169 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - assertion failed: path: $, actual: 'User Created Successfully', expected: '{"name":"jack"}', reason: not a sub-string
13:57:04.296 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
13:58:34.155 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
13:58:34.433 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
13:58:35.467 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > POST http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 58
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"john","email":"john@gmail.com","password":"john"}

13:58:35.517 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 44.86
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 08:28:35 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Created Successfully

13:58:35.520 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - assertion failed: path: $, actual: 'User Created Successfully', expected: '{"name":"john","email":"john@gmail.com","password":"john"}', reason: not equal
13:58:35.681 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
14:01:19.303 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
14:01:19.614 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:01:20.627 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > POST http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 58
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"Thor","email":"Thor@gmail.com","password":"Thor"}

14:01:20.681 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 49.90
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 08:31:20 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Created Successfully

14:01:20.685 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - assertion failed: path: $, actual: 'User Created Successfully', expected: '{"name":"Thor","email":"Thor@gmail.com","password":"Thor"}', reason: not equal
14:01:20.833 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
14:05:45.514 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
14:05:45.781 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:05:46.828 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > POST http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 60
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"smily","email":"smily@gmail.com","password":"Thor"}

14:05:46.872 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 40.87
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 08:35:46 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Created Successfully

14:05:46.999 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<pass>> feature 1 of 1: src/test/java/examples/users/users.feature
14:29:30.439 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
14:29:30.721 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:29:31.234 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
14:30:32.353 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
14:30:32.640 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:30:33.029 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
14:31:59.856 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
14:32:00.173 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:32:00.600 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
14:32:23.765 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
14:32:24.031 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:32:25.438 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/user/1
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

14:32:25.503 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 58.84
1 < 200
1 < Content-Length: 89
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 09:02:25 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
{
  "email": "balaji@gmail.com", 
  "id": 1, 
  "name": "balaji", 
  "password": "sai"
}


14:32:25.619 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<pass>> feature 1 of 1: src/test/java/examples/users/users.feature
14:32:51.030 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
14:32:51.291 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:32:52.200 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/user/2
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

14:32:52.244 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 32.80
1 < 200
1 < Content-Length: 83
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 09:02:52 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
{
  "email": "ram@gmail.com", 
  "id": 2, 
  "name": "ram", 
  "password": "sai"
}


14:32:52.356 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<pass>> feature 1 of 1: src/test/java/examples/users/users.feature
14:33:32.647 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
14:33:32.912 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:33:34.249 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > DELETE http://127.0.0.1:5000/user/11
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

14:33:34.351 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 98.19
1 < 200
1 < Content-Length: 89
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 09:03:34 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
{
  "email": "smily@gmail.com", 
  "id": 11, 
  "name": "smily", 
  "password": "Thor"
}


14:33:34.573 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<pass>> feature 1 of 1: src/test/java/examples/users/users.feature
14:35:09.779 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
14:35:10.046 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:35:11.033 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > POST http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 56
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"Anni","email":"ani@gmail.com","password":"ani"}

14:35:11.080 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 45.90
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 09:05:11 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Created Successfully

14:35:11.090 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - assertion failed: path: $, actual: 'User Created Successfully', expected: 'User Updated Successfully', reason: not equal
14:35:11.108 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:35:11.118 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > DELETE http://127.0.0.1:5000/user/10
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

14:35:11.143 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 21.39
1 < 200
1 < Content-Length: 87
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 09:05:11 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
{
  "email": "Thor@gmail.com", 
  "id": 10, 
  "name": "Thor", 
  "password": "Thor"
}


14:35:11.294 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
14:38:19.498 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
14:38:19.793 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:38:21.059 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > POST http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 61
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"Harper","email":"Harper@gmail.com","password":"ani"}

14:38:21.120 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 57.06
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 09:08:21 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Created Successfully

14:38:21.138 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:38:21.150 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > DELETE http://127.0.0.1:5000/user/12
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

14:38:21.169 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 17.06
1 < 200
1 < Content-Length: 85
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 09:08:21 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
{
  "email": "ani@gmail.com", 
  "id": 12, 
  "name": "Anni", 
  "password": "ani"
}


14:38:21.334 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<pass>> feature 1 of 1: src/test/java/examples/users/users.feature
14:44:34.387 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
14:44:34.679 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:44:35.724 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > POST http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 67
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"jackson","email":"jackson@gmail.com","password":"jackson"}

14:44:35.831 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 101.79
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 09:14:35 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Created Successfully

14:44:35.851 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:44:35.862 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > DELETE http://127.0.0.1:5000/user/7
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

14:44:35.875 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 12.92
1 < 200
1 < Content-Length: 91
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 09:14:35 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
{
  "email": "smith@gmail.com", 
  "id": 7, 
  "name": "JSmith", 
  "password": "balaji"
}


14:44:35.886 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:44:35.891 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

14:44:35.903 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 8.98
1 < 200
1 < Content-Length: 924
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 09:14:35 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
[
  {
    "email": "balaji@gmail.com", 
    "id": 1, 
    "name": "balaji", 
    "password": "sai"
  }, 
  {
    "email": "ram@gmail.com", 
    "id": 2, 
    "name": "ram", 
    "password": "sai"
  }, 
  {
    "email": "Lusy12@gmail.com", 
    "id": 3, 
    "name": "Lusy", 
    "password": "1234we"
  }, 
  {
    "email": "string", 
    "id": 5, 
    "name": "string", 
    "password": "string"
  }, 
  {
    "email": "john@gmail.com", 
    "id": 6, 
    "name": "John Smith", 
    "password": "balaji"
  }, 
  {
    "email": "jack@gmail.com", 
    "id": 8, 
    "name": "jack", 
    "password": "jack"
  }, 
  {
    "email": "john@gmail.com", 
    "id": 9, 
    "name": "john", 
    "password": "john"
  }, 
  {
    "email": "Harper@gmail.com", 
    "id": 13, 
    "name": "Harper", 
    "password": "ani"
  }, 
  {
    "email": "jackson@gmail.com", 
    "id": 14, 
    "name": "jackson", 
    "password": "jackson"
  }
]


14:44:35.921 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:44:35.927 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/user/2
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

14:44:35.934 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 7.03
1 < 200
1 < Content-Length: 83
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 09:14:35 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
{
  "email": "ram@gmail.com", 
  "id": 2, 
  "name": "ram", 
  "password": "sai"
}


14:44:35.937 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:44:35.969 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - http request failed: request body is required for a PUT, please use the 'request' keyword
14:44:36.158 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
14:46:34.917 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
14:46:35.315 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:46:36.424 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > POST http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 61
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"henry","email":"henry@gmail.com","password":"henry"}

14:46:36.474 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 45.70
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 09:16:36 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Created Successfully

14:46:36.492 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:46:36.503 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > DELETE http://127.0.0.1:5000/user/7
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

14:46:36.771 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 266.31
1 < 500
1 < Connection: close
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 09:16:36 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
1 < X-XSS-Protection: 0
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
  "http://www.w3.org/TR/html4/loose.dtd">
<html>
  <head>
    <title>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"
        type="text/css">
    <!-- We need to make sure this has a favicon so that the debugger does
         not by accident trigger a request to /favicon.ico which might
         change the application state. -->
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js"></script>
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script type="text/javascript">
      var TRACEBACK = 2371601137504,
          CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "oiNCkKA32okpVbSfZqpA";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>sqlalchemy.orm.exc.UnmappedInstanceError</h1>
<div class="detail">
  <p class="errormsg">sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  
  <ul><li><div class="frame" id="frame-2371601177624">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2012</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>if self._warn_on_events:</pre>
<pre class="line before"><span class="ws">            </span>self._flush_warning(&quot;Session.delete()&quot;)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line after"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line after"><span class="ws">            </span>util.raise_(</pre>
<pre class="line after"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="exc-divider">The above exception was the direct cause of the following exception:</div>
<li><div class="frame" id="frame-2371601064904">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2463</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def __repr__(self):</pre>
<pre class="line after"><span class="ws">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>
</div>

<li><div class="frame" id="frame-2371601137000">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2449</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2371601137560">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1866</em>,
      in <code class="function">handle_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># if we want to repropagate the exception, we can attempt to</pre>
<pre class="line before"><span class="ws">            </span># raise it with the whole traceback in case we can do that</pre>
<pre class="line before"><span class="ws">            </span># (the function was actually called from the except part)</pre>
<pre class="line before"><span class="ws">            </span># otherwise, we just raise the error again</pre>
<pre class="line before"><span class="ws">            </span>if exc_value is e:</pre>
<pre class="line current"><span class="ws">                </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">            </span>else:</pre>
<pre class="line after"><span class="ws">                </span>raise e</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self.log_exception((exc_type, exc_value, tb))</pre>
<pre class="line after"><span class="ws">        </span>server_error = InternalServerError()</pre></div>
</div>

<li><div class="frame" id="frame-2371601064792">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-2371601177344">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2446</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2371601174656">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1951</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Given the return value from a view function this finalizes</pre>
<pre class="line after"><span class="ws">        </span>the request by converting it into a response and invoking the</pre></div>
</div>

<li><div class="frame" id="frame-2371601177176">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1820</em>,
      in <code class="function">handle_user_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>return self.handle_http_exception(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>handler = self._find_error_handler(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>if handler is None:</pre>
<pre class="line current"><span class="ws">            </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">        </span>return handler(e)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def handle_exception(self, e):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Handle an exception that did not have an error handler</pre>
<pre class="line after"><span class="ws">        </span>associated with it, or that was raised from an error handler.</pre></div>
</div>

<li><div class="frame" id="frame-2371601178072">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-2371601175216">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1949</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre></div>
</div>

<li><div class="frame" id="frame-2371601177288">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1935</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre>
<pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line current"><span class="ws">        </span>return self.view_functions[rule.endpoint](**req.view_args)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2371601178408">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">89</em>,
      in <code class="function">view</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>constructor of the class.</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>def view(*args, **kwargs):</pre>
<pre class="line before"><span class="ws">            </span>self = view.view_class(*class_args, **class_kwargs)</pre>
<pre class="line current"><span class="ws">            </span>return self.dispatch_request(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if cls.decorators:</pre>
<pre class="line after"><span class="ws">            </span>view.__name__ = name</pre>
<pre class="line after"><span class="ws">            </span>view.__module__ = cls.__module__</pre>
<pre class="line after"><span class="ws">            </span>for decorator in cls.decorators:</pre></div>
</div>

<li><div class="frame" id="frame-2371601176560">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">163</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># retry with GET.</pre>
<pre class="line before"><span class="ws">        </span>if meth is None and request.method == &quot;HEAD&quot;:</pre>
<pre class="line before"><span class="ws">            </span>meth = getattr(self, &quot;get&quot;, None)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>assert meth is not None, &quot;Unimplemented method %r&quot; % request.method</pre>
<pre class="line current"><span class="ws">        </span>return meth(*args, **kwargs)</pre></div>
</div>

<li><div class="frame" id="frame-2371601177568">
  <h4>File <cite class="filename">"C:\Users\admin\PycharmProjects\TrainingTask\app.py"</cite>,
      line <em class="line">112</em>,
      in <code class="function">delete</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                  </span>type: array</pre>
<pre class="line before"><span class="ws">                  </span>items:</pre>
<pre class="line before"><span class="ws">                    </span>$ref: '#/definitions/User'</pre>
<pre class="line before"><span class="ws">                </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>data = UserModel.query.get(user_id)</pre>
<pre class="line current"><span class="ws">        </span>db.session.delete(data)</pre>
<pre class="line after"><span class="ws">        </span>db.session.commit()</pre>
<pre class="line after"><span class="ws">        </span>return jsonify(UserModelSchema().dump(data))</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def put(self, user_id):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;</pre></div>
</div>

<li><div class="frame" id="frame-2371601177512">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py"</cite>,
      line <em class="line">162</em>,
      in <code class="function">do</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span>&quot;&quot;&quot;Old name for backwards compatibility.&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>def instrument(name):</pre>
<pre class="line before"><span class="ws">    </span>def do(self, *args, **kwargs):</pre>
<pre class="line current"><span class="ws">        </span>return getattr(self.registry(), name)(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>return do</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>for meth in Session.public_methods:</pre></div>
</div>

<li><div class="frame" id="frame-2371601178296">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2015</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line before"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line before"><span class="ws">            </span>util.raise_(</pre>
<pre class="line current"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self._delete_impl(state, instance, head=True)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _delete_impl(self, state, obj, head):</pre></div>
</div>

<li><div class="frame" id="frame-2371601175832">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py"</cite>,
      line <em class="line">178</em>,
      in <code class="function">raise_</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># intermediary exception does not change, but we can't figure</pre>
<pre class="line before"><span class="ws">            </span># that out.</pre>
<pre class="line before"><span class="ws">            </span>exception.__cause__ = replace_context</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>raise exception</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre>
<pre class="line after"><span class="ws">            </span># credit to</pre>
<pre class="line after"><span class="ws">            </span># https://cosmicpercolator.com/2016/01/13/exception-leaks-in-python-2-and-3/</pre>
<pre class="line after"><span class="ws">            </span># as the __traceback__ object creates a cycle</pre>
<pre class="line after"><span class="ws">            </span>del exception, replace_context, from_, with_traceback</pre></div>
</div>
</ul>
  <blockquote>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</blockquote>
</div>

<div class="plain">
  <form action="/?__debugger__=yes&amp;cmd=paste" method="post">
    <p>
      <input type="hidden" name="language" value="pytb">
      This is the Copy/Paste friendly version of the traceback.  <span
      class="pastemessage">You can also paste this traceback into
      a <a href="https://gist.github.com/">gist</a>:
      <input type="submit" value="create paste"></span>
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2449, in wsgi_app
    response = self.handle_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 163, in dispatch_request
    return meth(*args, **kwargs)
  File &quot;C:\Users\admin\PycharmProjects\TrainingTask\app.py&quot;, line 112, in delete
    db.session.delete(data)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py&quot;, line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py&quot;, line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</textarea>
  </form>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2449, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 163, in dispatch_request
    return meth(*args, **kwargs)
  File "C:\Users\admin\PycharmProjects\TrainingTask\app.py", line 112, in delete
    db.session.delete(data)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py", line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped

-->


14:46:36.827 [ForkJoinPool-1-worker-1] WARN  com.intuit.karate - xml parsing failed, response data type set to string: org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 5; The element type "link" must be terminated by the matching end-tag "</link>".
14:46:36.829 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - status code was: 500, expected: 200, response time: 266, url: http://127.0.0.1:5000/user/7, response: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
  "http://www.w3.org/TR/html4/loose.dtd">
<html>
  <head>
    <title>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"
        type="text/css">
    <!-- We need to make sure this has a favicon so that the debugger does
         not by accident trigger a request to /favicon.ico which might
         change the application state. -->
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js"></script>
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script type="text/javascript">
      var TRACEBACK = 2371601137504,
          CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "oiNCkKA32okpVbSfZqpA";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>sqlalchemy.orm.exc.UnmappedInstanceError</h1>
<div class="detail">
  <p class="errormsg">sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  
  <ul><li><div class="frame" id="frame-2371601177624">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2012</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>if self._warn_on_events:</pre>
<pre class="line before"><span class="ws">            </span>self._flush_warning(&quot;Session.delete()&quot;)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line after"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line after"><span class="ws">            </span>util.raise_(</pre>
<pre class="line after"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="exc-divider">The above exception was the direct cause of the following exception:</div>
<li><div class="frame" id="frame-2371601064904">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2463</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def __repr__(self):</pre>
<pre class="line after"><span class="ws">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>
</div>

<li><div class="frame" id="frame-2371601137000">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2449</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2371601137560">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1866</em>,
      in <code class="function">handle_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># if we want to repropagate the exception, we can attempt to</pre>
<pre class="line before"><span class="ws">            </span># raise it with the whole traceback in case we can do that</pre>
<pre class="line before"><span class="ws">            </span># (the function was actually called from the except part)</pre>
<pre class="line before"><span class="ws">            </span># otherwise, we just raise the error again</pre>
<pre class="line before"><span class="ws">            </span>if exc_value is e:</pre>
<pre class="line current"><span class="ws">                </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">            </span>else:</pre>
<pre class="line after"><span class="ws">                </span>raise e</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self.log_exception((exc_type, exc_value, tb))</pre>
<pre class="line after"><span class="ws">        </span>server_error = InternalServerError()</pre></div>
</div>

<li><div class="frame" id="frame-2371601064792">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-2371601177344">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2446</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2371601174656">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1951</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Given the return value from a view function this finalizes</pre>
<pre class="line after"><span class="ws">        </span>the request by converting it into a response and invoking the</pre></div>
</div>

<li><div class="frame" id="frame-2371601177176">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1820</em>,
      in <code class="function">handle_user_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>return self.handle_http_exception(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>handler = self._find_error_handler(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>if handler is None:</pre>
<pre class="line current"><span class="ws">            </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">        </span>return handler(e)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def handle_exception(self, e):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Handle an exception that did not have an error handler</pre>
<pre class="line after"><span class="ws">        </span>associated with it, or that was raised from an error handler.</pre></div>
</div>

<li><div class="frame" id="frame-2371601178072">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-2371601175216">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1949</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre></div>
</div>

<li><div class="frame" id="frame-2371601177288">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1935</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre>
<pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line current"><span class="ws">        </span>return self.view_functions[rule.endpoint](**req.view_args)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2371601178408">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">89</em>,
      in <code class="function">view</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>constructor of the class.</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>def view(*args, **kwargs):</pre>
<pre class="line before"><span class="ws">            </span>self = view.view_class(*class_args, **class_kwargs)</pre>
<pre class="line current"><span class="ws">            </span>return self.dispatch_request(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if cls.decorators:</pre>
<pre class="line after"><span class="ws">            </span>view.__name__ = name</pre>
<pre class="line after"><span class="ws">            </span>view.__module__ = cls.__module__</pre>
<pre class="line after"><span class="ws">            </span>for decorator in cls.decorators:</pre></div>
</div>

<li><div class="frame" id="frame-2371601176560">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">163</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># retry with GET.</pre>
<pre class="line before"><span class="ws">        </span>if meth is None and request.method == &quot;HEAD&quot;:</pre>
<pre class="line before"><span class="ws">            </span>meth = getattr(self, &quot;get&quot;, None)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>assert meth is not None, &quot;Unimplemented method %r&quot; % request.method</pre>
<pre class="line current"><span class="ws">        </span>return meth(*args, **kwargs)</pre></div>
</div>

<li><div class="frame" id="frame-2371601177568">
  <h4>File <cite class="filename">"C:\Users\admin\PycharmProjects\TrainingTask\app.py"</cite>,
      line <em class="line">112</em>,
      in <code class="function">delete</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                  </span>type: array</pre>
<pre class="line before"><span class="ws">                  </span>items:</pre>
<pre class="line before"><span class="ws">                    </span>$ref: '#/definitions/User'</pre>
<pre class="line before"><span class="ws">                </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>data = UserModel.query.get(user_id)</pre>
<pre class="line current"><span class="ws">        </span>db.session.delete(data)</pre>
<pre class="line after"><span class="ws">        </span>db.session.commit()</pre>
<pre class="line after"><span class="ws">        </span>return jsonify(UserModelSchema().dump(data))</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def put(self, user_id):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;</pre></div>
</div>

<li><div class="frame" id="frame-2371601177512">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py"</cite>,
      line <em class="line">162</em>,
      in <code class="function">do</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span>&quot;&quot;&quot;Old name for backwards compatibility.&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>def instrument(name):</pre>
<pre class="line before"><span class="ws">    </span>def do(self, *args, **kwargs):</pre>
<pre class="line current"><span class="ws">        </span>return getattr(self.registry(), name)(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>return do</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>for meth in Session.public_methods:</pre></div>
</div>

<li><div class="frame" id="frame-2371601178296">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2015</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line before"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line before"><span class="ws">            </span>util.raise_(</pre>
<pre class="line current"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self._delete_impl(state, instance, head=True)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _delete_impl(self, state, obj, head):</pre></div>
</div>

<li><div class="frame" id="frame-2371601175832">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py"</cite>,
      line <em class="line">178</em>,
      in <code class="function">raise_</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># intermediary exception does not change, but we can't figure</pre>
<pre class="line before"><span class="ws">            </span># that out.</pre>
<pre class="line before"><span class="ws">            </span>exception.__cause__ = replace_context</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>raise exception</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre>
<pre class="line after"><span class="ws">            </span># credit to</pre>
<pre class="line after"><span class="ws">            </span># https://cosmicpercolator.com/2016/01/13/exception-leaks-in-python-2-and-3/</pre>
<pre class="line after"><span class="ws">            </span># as the __traceback__ object creates a cycle</pre>
<pre class="line after"><span class="ws">            </span>del exception, replace_context, from_, with_traceback</pre></div>
</div>
</ul>
  <blockquote>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</blockquote>
</div>

<div class="plain">
  <form action="/?__debugger__=yes&amp;cmd=paste" method="post">
    <p>
      <input type="hidden" name="language" value="pytb">
      This is the Copy/Paste friendly version of the traceback.  <span
      class="pastemessage">You can also paste this traceback into
      a <a href="https://gist.github.com/">gist</a>:
      <input type="submit" value="create paste"></span>
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2449, in wsgi_app
    response = self.handle_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 163, in dispatch_request
    return meth(*args, **kwargs)
  File &quot;C:\Users\admin\PycharmProjects\TrainingTask\app.py&quot;, line 112, in delete
    db.session.delete(data)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py&quot;, line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py&quot;, line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</textarea>
  </form>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2449, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 163, in dispatch_request
    return meth(*args, **kwargs)
  File "C:\Users\admin\PycharmProjects\TrainingTask\app.py", line 112, in delete
    db.session.delete(data)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py", line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped

-->

14:46:36.879 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:46:36.885 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

14:46:36.934 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 46.83
1 < 200
1 < Content-Length: 1028
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 09:16:36 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
[
  {
    "email": "balaji@gmail.com", 
    "id": 1, 
    "name": "balaji", 
    "password": "sai"
  }, 
  {
    "email": "ram@gmail.com", 
    "id": 2, 
    "name": "ram", 
    "password": "sai"
  }, 
  {
    "email": "Lusy12@gmail.com", 
    "id": 3, 
    "name": "Lusy", 
    "password": "1234we"
  }, 
  {
    "email": "string", 
    "id": 5, 
    "name": "string", 
    "password": "string"
  }, 
  {
    "email": "john@gmail.com", 
    "id": 6, 
    "name": "John Smith", 
    "password": "balaji"
  }, 
  {
    "email": "jack@gmail.com", 
    "id": 8, 
    "name": "jack", 
    "password": "jack"
  }, 
  {
    "email": "john@gmail.com", 
    "id": 9, 
    "name": "john", 
    "password": "john"
  }, 
  {
    "email": "Harper@gmail.com", 
    "id": 13, 
    "name": "Harper", 
    "password": "ani"
  }, 
  {
    "email": "jackson@gmail.com", 
    "id": 14, 
    "name": "jackson", 
    "password": "jackson"
  }, 
  {
    "email": "henry@gmail.com", 
    "id": 15, 
    "name": "henry", 
    "password": "henry"
  }
]


14:46:36.945 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:46:36.952 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/user/2
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

14:46:36.959 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 5.72
1 < 200
1 < Content-Length: 83
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 09:16:36 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
{
  "email": "ram@gmail.com", 
  "id": 2, 
  "name": "ram", 
  "password": "sai"
}


14:46:36.970 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:46:36.977 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - http request failed: request body is required for a PUT, please use the 'request' keyword
14:46:37.318 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
14:50:27.904 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
14:50:28.188 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
14:50:29.672 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > POST http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 55
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":2,"email":"henry@gmail.com","password":"henry"}

14:50:29.729 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 54.29
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 09:20:29 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Created Successfully

14:50:29.915 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<pass>> feature 1 of 1: src/test/java/examples/users/users.feature
15:24:05.972 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
15:24:06.474 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
15:24:07.566 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > POST http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 63
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"magrit","email":"magrit@gmail.com","password":"henry"}

15:24:07.822 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 252.06
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 09:54:07 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Created Successfully

15:24:07.855 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
15:24:07.869 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > DELETE http://127.0.0.1:5000/user/5
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

15:24:07.961 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 90.31
1 < 200
1 < Content-Length: 82
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 09:54:07 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
{
  "email": "string", 
  "id": 5, 
  "name": "string", 
  "password": "string"
}


15:24:07.984 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
15:24:07.997 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

15:24:08.016 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 18.46
1 < 200
1 < Content-Length: 1138
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 09:54:08 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
[
  {
    "email": "balaji@gmail.com", 
    "id": 1, 
    "name": "balaji", 
    "password": "sai"
  }, 
  {
    "email": "ram@gmail.com", 
    "id": 2, 
    "name": "ram", 
    "password": "sai"
  }, 
  {
    "email": "Lusy12@gmail.com", 
    "id": 3, 
    "name": "Lusy", 
    "password": "1234we"
  }, 
  {
    "email": "john@gmail.com", 
    "id": 6, 
    "name": "John Smith", 
    "password": "balaji"
  }, 
  {
    "email": "jack@gmail.com", 
    "id": 8, 
    "name": "jack", 
    "password": "jack"
  }, 
  {
    "email": "john@gmail.com", 
    "id": 9, 
    "name": "john", 
    "password": "john"
  }, 
  {
    "email": "Harper@gmail.com", 
    "id": 13, 
    "name": "Harper", 
    "password": "ani"
  }, 
  {
    "email": "jackson@gmail.com", 
    "id": 14, 
    "name": "jackson", 
    "password": "jackson"
  }, 
  {
    "email": "henry@gmail.com", 
    "id": 15, 
    "name": "henry", 
    "password": "henry"
  }, 
  {
    "email": "henry@gmail.com", 
    "id": 16, 
    "name": "2", 
    "password": "henry"
  }, 
  {
    "email": "magrit@gmail.com", 
    "id": 17, 
    "name": "magrit", 
    "password": "henry"
  }
]


15:24:08.030 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
15:24:08.037 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/user/2
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

15:24:08.047 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 8.90
1 < 200
1 < Content-Length: 83
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 09:54:08 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
{
  "email": "ram@gmail.com", 
  "id": 2, 
  "name": "ram", 
  "password": "sai"
}


15:24:08.062 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
15:24:08.069 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > PUT http://127.0.0.1:5000/user/13
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 58
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"mary","email":"mary@gmail.com","password":"mary"}

15:24:08.118 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 47.13
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 09:54:08 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Updated Successfully

15:24:08.319 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<pass>> feature 1 of 1: src/test/java/examples/users/users.feature
15:26:20.770 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
15:26:21.058 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
15:26:22.082 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > POST http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 63
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"harley","email":"harley@gmail.com","password":"henry"}

15:26:22.131 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 46.34
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 09:56:22 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Created Successfully

15:26:22.150 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
15:26:22.163 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > DELETE http://127.0.0.1:5000/user/16
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

15:26:22.182 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 17.71
1 < 200
1 < Content-Length: 86
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 09:56:22 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
{
  "email": "henry@gmail.com", 
  "id": 16, 
  "name": "2", 
  "password": "henry"
}


15:26:22.194 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
15:26:22.203 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

15:26:22.214 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 10.89
1 < 200
1 < Content-Length: 1141
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 09:56:22 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
[
  {
    "email": "balaji@gmail.com", 
    "id": 1, 
    "name": "balaji", 
    "password": "sai"
  }, 
  {
    "email": "ram@gmail.com", 
    "id": 2, 
    "name": "ram", 
    "password": "sai"
  }, 
  {
    "email": "Lusy12@gmail.com", 
    "id": 3, 
    "name": "Lusy", 
    "password": "1234we"
  }, 
  {
    "email": "john@gmail.com", 
    "id": 6, 
    "name": "John Smith", 
    "password": "balaji"
  }, 
  {
    "email": "jack@gmail.com", 
    "id": 8, 
    "name": "jack", 
    "password": "jack"
  }, 
  {
    "email": "john@gmail.com", 
    "id": 9, 
    "name": "john", 
    "password": "john"
  }, 
  {
    "email": "mary@gmail.com", 
    "id": 13, 
    "name": "mary", 
    "password": "mary"
  }, 
  {
    "email": "jackson@gmail.com", 
    "id": 14, 
    "name": "jackson", 
    "password": "jackson"
  }, 
  {
    "email": "henry@gmail.com", 
    "id": 15, 
    "name": "henry", 
    "password": "henry"
  }, 
  {
    "email": "magrit@gmail.com", 
    "id": 17, 
    "name": "magrit", 
    "password": "henry"
  }, 
  {
    "email": "harley@gmail.com", 
    "id": 18, 
    "name": "harley", 
    "password": "henry"
  }
]


15:26:22.233 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
15:26:22.244 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/user/2
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

15:26:22.253 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 7.73
1 < 200
1 < Content-Length: 83
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 09:56:22 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
{
  "email": "ram@gmail.com", 
  "id": 2, 
  "name": "ram", 
  "password": "sai"
}


15:26:22.274 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
15:26:22.282 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > PUT http://127.0.0.1:5000/user/13
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 58
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"mary","email":"mary@gmail.com","password":"mary"}

15:26:22.323 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 39.08
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 09:56:22 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Updated Successfully

15:26:22.482 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<pass>> feature 1 of 1: src/test/java/examples/users/users.feature
17:13:31.774 [main] INFO  com.intuit.karate - karate.env system property was:  
17:13:33.218 [main] DEBUG com.intuit.karate - request:
1 > POST http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 63
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"harley","email":"harley@gmail.com","password":"henry"}

17:13:33.481 [main] DEBUG com.intuit.karate - response time in milliseconds: 257.22
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 11:43:33 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Created Successfully

17:13:33.523 [main] INFO  com.intuit.karate - karate.env system property was:  
17:13:33.539 [main] DEBUG com.intuit.karate - request:
1 > DELETE http://127.0.0.1:5000/user/16
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

17:13:33.769 [main] DEBUG com.intuit.karate - response time in milliseconds: 225.32
1 < 500
1 < Connection: close
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 11:43:33 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
1 < X-XSS-Protection: 0
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
  "http://www.w3.org/TR/html4/loose.dtd">
<html>
  <head>
    <title>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"
        type="text/css">
    <!-- We need to make sure this has a favicon so that the debugger does
         not by accident trigger a request to /favicon.ico which might
         change the application state. -->
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js"></script>
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script type="text/javascript">
      var TRACEBACK = 2371604290528,
          CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "oiNCkKA32okpVbSfZqpA";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>sqlalchemy.orm.exc.UnmappedInstanceError</h1>
<div class="detail">
  <p class="errormsg">sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  
  <ul><li><div class="frame" id="frame-2371604391584">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2012</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>if self._warn_on_events:</pre>
<pre class="line before"><span class="ws">            </span>self._flush_warning(&quot;Session.delete()&quot;)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line after"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line after"><span class="ws">            </span>util.raise_(</pre>
<pre class="line after"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="exc-divider">The above exception was the direct cause of the following exception:</div>
<li><div class="frame" id="frame-2371604207208">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2463</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def __repr__(self):</pre>
<pre class="line after"><span class="ws">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>
</div>

<li><div class="frame" id="frame-2371604209336">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2449</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2371604208776">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1866</em>,
      in <code class="function">handle_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># if we want to repropagate the exception, we can attempt to</pre>
<pre class="line before"><span class="ws">            </span># raise it with the whole traceback in case we can do that</pre>
<pre class="line before"><span class="ws">            </span># (the function was actually called from the except part)</pre>
<pre class="line before"><span class="ws">            </span># otherwise, we just raise the error again</pre>
<pre class="line before"><span class="ws">            </span>if exc_value is e:</pre>
<pre class="line current"><span class="ws">                </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">            </span>else:</pre>
<pre class="line after"><span class="ws">                </span>raise e</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self.log_exception((exc_type, exc_value, tb))</pre>
<pre class="line after"><span class="ws">        </span>server_error = InternalServerError()</pre></div>
</div>

<li><div class="frame" id="frame-2371604207824">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-2371604209056">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2446</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2371604208496">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1951</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Given the return value from a view function this finalizes</pre>
<pre class="line after"><span class="ws">        </span>the request by converting it into a response and invoking the</pre></div>
</div>

<li><div class="frame" id="frame-2371604207656">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1820</em>,
      in <code class="function">handle_user_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>return self.handle_http_exception(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>handler = self._find_error_handler(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>if handler is None:</pre>
<pre class="line current"><span class="ws">            </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">        </span>return handler(e)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def handle_exception(self, e):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Handle an exception that did not have an error handler</pre>
<pre class="line after"><span class="ws">        </span>associated with it, or that was raised from an error handler.</pre></div>
</div>

<li><div class="frame" id="frame-2371604208720">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-2371604207376">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1949</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre></div>
</div>

<li><div class="frame" id="frame-2371604206984">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1935</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre>
<pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line current"><span class="ws">        </span>return self.view_functions[rule.endpoint](**req.view_args)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2371604209280">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">89</em>,
      in <code class="function">view</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>constructor of the class.</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>def view(*args, **kwargs):</pre>
<pre class="line before"><span class="ws">            </span>self = view.view_class(*class_args, **class_kwargs)</pre>
<pre class="line current"><span class="ws">            </span>return self.dispatch_request(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if cls.decorators:</pre>
<pre class="line after"><span class="ws">            </span>view.__name__ = name</pre>
<pre class="line after"><span class="ws">            </span>view.__module__ = cls.__module__</pre>
<pre class="line after"><span class="ws">            </span>for decorator in cls.decorators:</pre></div>
</div>

<li><div class="frame" id="frame-2371604209112">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">163</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># retry with GET.</pre>
<pre class="line before"><span class="ws">        </span>if meth is None and request.method == &quot;HEAD&quot;:</pre>
<pre class="line before"><span class="ws">            </span>meth = getattr(self, &quot;get&quot;, None)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>assert meth is not None, &quot;Unimplemented method %r&quot; % request.method</pre>
<pre class="line current"><span class="ws">        </span>return meth(*args, **kwargs)</pre></div>
</div>

<li><div class="frame" id="frame-2371604206928">
  <h4>File <cite class="filename">"C:\Users\admin\PycharmProjects\TrainingTask\app.py"</cite>,
      line <em class="line">112</em>,
      in <code class="function">delete</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                  </span>type: array</pre>
<pre class="line before"><span class="ws">                  </span>items:</pre>
<pre class="line before"><span class="ws">                    </span>$ref: '#/definitions/User'</pre>
<pre class="line before"><span class="ws">                </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>data = UserModel.query.get(user_id)</pre>
<pre class="line current"><span class="ws">        </span>db.session.delete(data)</pre>
<pre class="line after"><span class="ws">        </span>db.session.commit()</pre>
<pre class="line after"><span class="ws">        </span>return jsonify(UserModelSchema().dump(data))</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def put(self, user_id):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;</pre></div>
</div>

<li><div class="frame" id="frame-2371604207992">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py"</cite>,
      line <em class="line">162</em>,
      in <code class="function">do</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span>&quot;&quot;&quot;Old name for backwards compatibility.&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>def instrument(name):</pre>
<pre class="line before"><span class="ws">    </span>def do(self, *args, **kwargs):</pre>
<pre class="line current"><span class="ws">        </span>return getattr(self.registry(), name)(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>return do</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>for meth in Session.public_methods:</pre></div>
</div>

<li><div class="frame" id="frame-2371604209616">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2015</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line before"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line before"><span class="ws">            </span>util.raise_(</pre>
<pre class="line current"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self._delete_impl(state, instance, head=True)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _delete_impl(self, state, obj, head):</pre></div>
</div>

<li><div class="frame" id="frame-2371604208832">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py"</cite>,
      line <em class="line">178</em>,
      in <code class="function">raise_</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># intermediary exception does not change, but we can't figure</pre>
<pre class="line before"><span class="ws">            </span># that out.</pre>
<pre class="line before"><span class="ws">            </span>exception.__cause__ = replace_context</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>raise exception</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre>
<pre class="line after"><span class="ws">            </span># credit to</pre>
<pre class="line after"><span class="ws">            </span># https://cosmicpercolator.com/2016/01/13/exception-leaks-in-python-2-and-3/</pre>
<pre class="line after"><span class="ws">            </span># as the __traceback__ object creates a cycle</pre>
<pre class="line after"><span class="ws">            </span>del exception, replace_context, from_, with_traceback</pre></div>
</div>
</ul>
  <blockquote>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</blockquote>
</div>

<div class="plain">
  <form action="/?__debugger__=yes&amp;cmd=paste" method="post">
    <p>
      <input type="hidden" name="language" value="pytb">
      This is the Copy/Paste friendly version of the traceback.  <span
      class="pastemessage">You can also paste this traceback into
      a <a href="https://gist.github.com/">gist</a>:
      <input type="submit" value="create paste"></span>
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2449, in wsgi_app
    response = self.handle_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 163, in dispatch_request
    return meth(*args, **kwargs)
  File &quot;C:\Users\admin\PycharmProjects\TrainingTask\app.py&quot;, line 112, in delete
    db.session.delete(data)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py&quot;, line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py&quot;, line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</textarea>
  </form>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2449, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 163, in dispatch_request
    return meth(*args, **kwargs)
  File "C:\Users\admin\PycharmProjects\TrainingTask\app.py", line 112, in delete
    db.session.delete(data)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py", line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped

-->


17:13:33.830 [main] WARN  com.intuit.karate - xml parsing failed, response data type set to string: org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 5; The element type "link" must be terminated by the matching end-tag "</link>".
17:13:33.830 [main] ERROR com.intuit.karate - status code was: 500, expected: 200, response time: 225, url: http://127.0.0.1:5000/user/16, response: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
  "http://www.w3.org/TR/html4/loose.dtd">
<html>
  <head>
    <title>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"
        type="text/css">
    <!-- We need to make sure this has a favicon so that the debugger does
         not by accident trigger a request to /favicon.ico which might
         change the application state. -->
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js"></script>
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script type="text/javascript">
      var TRACEBACK = 2371604290528,
          CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "oiNCkKA32okpVbSfZqpA";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>sqlalchemy.orm.exc.UnmappedInstanceError</h1>
<div class="detail">
  <p class="errormsg">sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  
  <ul><li><div class="frame" id="frame-2371604391584">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2012</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>if self._warn_on_events:</pre>
<pre class="line before"><span class="ws">            </span>self._flush_warning(&quot;Session.delete()&quot;)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line after"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line after"><span class="ws">            </span>util.raise_(</pre>
<pre class="line after"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="exc-divider">The above exception was the direct cause of the following exception:</div>
<li><div class="frame" id="frame-2371604207208">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2463</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def __repr__(self):</pre>
<pre class="line after"><span class="ws">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>
</div>

<li><div class="frame" id="frame-2371604209336">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2449</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2371604208776">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1866</em>,
      in <code class="function">handle_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># if we want to repropagate the exception, we can attempt to</pre>
<pre class="line before"><span class="ws">            </span># raise it with the whole traceback in case we can do that</pre>
<pre class="line before"><span class="ws">            </span># (the function was actually called from the except part)</pre>
<pre class="line before"><span class="ws">            </span># otherwise, we just raise the error again</pre>
<pre class="line before"><span class="ws">            </span>if exc_value is e:</pre>
<pre class="line current"><span class="ws">                </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">            </span>else:</pre>
<pre class="line after"><span class="ws">                </span>raise e</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self.log_exception((exc_type, exc_value, tb))</pre>
<pre class="line after"><span class="ws">        </span>server_error = InternalServerError()</pre></div>
</div>

<li><div class="frame" id="frame-2371604207824">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-2371604209056">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2446</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2371604208496">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1951</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Given the return value from a view function this finalizes</pre>
<pre class="line after"><span class="ws">        </span>the request by converting it into a response and invoking the</pre></div>
</div>

<li><div class="frame" id="frame-2371604207656">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1820</em>,
      in <code class="function">handle_user_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>return self.handle_http_exception(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>handler = self._find_error_handler(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>if handler is None:</pre>
<pre class="line current"><span class="ws">            </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">        </span>return handler(e)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def handle_exception(self, e):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Handle an exception that did not have an error handler</pre>
<pre class="line after"><span class="ws">        </span>associated with it, or that was raised from an error handler.</pre></div>
</div>

<li><div class="frame" id="frame-2371604208720">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-2371604207376">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1949</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre></div>
</div>

<li><div class="frame" id="frame-2371604206984">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1935</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre>
<pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line current"><span class="ws">        </span>return self.view_functions[rule.endpoint](**req.view_args)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2371604209280">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">89</em>,
      in <code class="function">view</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>constructor of the class.</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>def view(*args, **kwargs):</pre>
<pre class="line before"><span class="ws">            </span>self = view.view_class(*class_args, **class_kwargs)</pre>
<pre class="line current"><span class="ws">            </span>return self.dispatch_request(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if cls.decorators:</pre>
<pre class="line after"><span class="ws">            </span>view.__name__ = name</pre>
<pre class="line after"><span class="ws">            </span>view.__module__ = cls.__module__</pre>
<pre class="line after"><span class="ws">            </span>for decorator in cls.decorators:</pre></div>
</div>

<li><div class="frame" id="frame-2371604209112">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">163</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># retry with GET.</pre>
<pre class="line before"><span class="ws">        </span>if meth is None and request.method == &quot;HEAD&quot;:</pre>
<pre class="line before"><span class="ws">            </span>meth = getattr(self, &quot;get&quot;, None)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>assert meth is not None, &quot;Unimplemented method %r&quot; % request.method</pre>
<pre class="line current"><span class="ws">        </span>return meth(*args, **kwargs)</pre></div>
</div>

<li><div class="frame" id="frame-2371604206928">
  <h4>File <cite class="filename">"C:\Users\admin\PycharmProjects\TrainingTask\app.py"</cite>,
      line <em class="line">112</em>,
      in <code class="function">delete</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                  </span>type: array</pre>
<pre class="line before"><span class="ws">                  </span>items:</pre>
<pre class="line before"><span class="ws">                    </span>$ref: '#/definitions/User'</pre>
<pre class="line before"><span class="ws">                </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>data = UserModel.query.get(user_id)</pre>
<pre class="line current"><span class="ws">        </span>db.session.delete(data)</pre>
<pre class="line after"><span class="ws">        </span>db.session.commit()</pre>
<pre class="line after"><span class="ws">        </span>return jsonify(UserModelSchema().dump(data))</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def put(self, user_id):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;</pre></div>
</div>

<li><div class="frame" id="frame-2371604207992">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py"</cite>,
      line <em class="line">162</em>,
      in <code class="function">do</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span>&quot;&quot;&quot;Old name for backwards compatibility.&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>def instrument(name):</pre>
<pre class="line before"><span class="ws">    </span>def do(self, *args, **kwargs):</pre>
<pre class="line current"><span class="ws">        </span>return getattr(self.registry(), name)(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>return do</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>for meth in Session.public_methods:</pre></div>
</div>

<li><div class="frame" id="frame-2371604209616">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2015</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line before"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line before"><span class="ws">            </span>util.raise_(</pre>
<pre class="line current"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self._delete_impl(state, instance, head=True)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _delete_impl(self, state, obj, head):</pre></div>
</div>

<li><div class="frame" id="frame-2371604208832">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py"</cite>,
      line <em class="line">178</em>,
      in <code class="function">raise_</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># intermediary exception does not change, but we can't figure</pre>
<pre class="line before"><span class="ws">            </span># that out.</pre>
<pre class="line before"><span class="ws">            </span>exception.__cause__ = replace_context</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>raise exception</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre>
<pre class="line after"><span class="ws">            </span># credit to</pre>
<pre class="line after"><span class="ws">            </span># https://cosmicpercolator.com/2016/01/13/exception-leaks-in-python-2-and-3/</pre>
<pre class="line after"><span class="ws">            </span># as the __traceback__ object creates a cycle</pre>
<pre class="line after"><span class="ws">            </span>del exception, replace_context, from_, with_traceback</pre></div>
</div>
</ul>
  <blockquote>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</blockquote>
</div>

<div class="plain">
  <form action="/?__debugger__=yes&amp;cmd=paste" method="post">
    <p>
      <input type="hidden" name="language" value="pytb">
      This is the Copy/Paste friendly version of the traceback.  <span
      class="pastemessage">You can also paste this traceback into
      a <a href="https://gist.github.com/">gist</a>:
      <input type="submit" value="create paste"></span>
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2449, in wsgi_app
    response = self.handle_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 163, in dispatch_request
    return meth(*args, **kwargs)
  File &quot;C:\Users\admin\PycharmProjects\TrainingTask\app.py&quot;, line 112, in delete
    db.session.delete(data)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py&quot;, line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py&quot;, line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</textarea>
  </form>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2449, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 163, in dispatch_request
    return meth(*args, **kwargs)
  File "C:\Users\admin\PycharmProjects\TrainingTask\app.py", line 112, in delete
    db.session.delete(data)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py", line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped

-->

17:13:34.266 [main] INFO  com.intuit.karate - karate.env system property was:  
17:13:34.270 [main] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

17:13:34.311 [main] DEBUG com.intuit.karate - response time in milliseconds: 37.75
1 < 200
1 < Content-Length: 1247
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 11:43:34 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
[
  {
    "email": "balaji@gmail.com", 
    "id": 1, 
    "name": "balaji", 
    "password": "sai"
  }, 
  {
    "email": "ram@gmail.com", 
    "id": 2, 
    "name": "ram", 
    "password": "sai"
  }, 
  {
    "email": "Lusy12@gmail.com", 
    "id": 3, 
    "name": "Lusy", 
    "password": "1234we"
  }, 
  {
    "email": "john@gmail.com", 
    "id": 6, 
    "name": "John Smith", 
    "password": "balaji"
  }, 
  {
    "email": "jack@gmail.com", 
    "id": 8, 
    "name": "jack", 
    "password": "jack"
  }, 
  {
    "email": "john@gmail.com", 
    "id": 9, 
    "name": "john", 
    "password": "john"
  }, 
  {
    "email": "mary@gmail.com", 
    "id": 13, 
    "name": "mary", 
    "password": "mary"
  }, 
  {
    "email": "jackson@gmail.com", 
    "id": 14, 
    "name": "jackson", 
    "password": "jackson"
  }, 
  {
    "email": "henry@gmail.com", 
    "id": 15, 
    "name": "henry", 
    "password": "henry"
  }, 
  {
    "email": "magrit@gmail.com", 
    "id": 17, 
    "name": "magrit", 
    "password": "henry"
  }, 
  {
    "email": "harley@gmail.com", 
    "id": 18, 
    "name": "harley", 
    "password": "henry"
  }, 
  {
    "email": "harley@gmail.com", 
    "id": 19, 
    "name": "harley", 
    "password": "henry"
  }
]


17:13:34.339 [main] INFO  com.intuit.karate - karate.env system property was:  
17:13:34.347 [main] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/user/2
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

17:13:34.364 [main] DEBUG com.intuit.karate - response time in milliseconds: 15.11
1 < 200
1 < Content-Length: 83
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 11:43:34 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
{
  "email": "ram@gmail.com", 
  "id": 2, 
  "name": "ram", 
  "password": "sai"
}


17:13:34.385 [main] INFO  com.intuit.karate - karate.env system property was:  
17:13:34.394 [main] DEBUG com.intuit.karate - request:
1 > PUT http://127.0.0.1:5000/user/13
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 58
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"mary","email":"mary@gmail.com","password":"mary"}

17:13:34.408 [main] DEBUG com.intuit.karate - response time in milliseconds: 13.37
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 11:43:34 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Updated Successfully

21:09:12.068 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
21:09:12.395 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
21:09:13.812 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > POST http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 63
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"harley","email":"harley@gmail.com","password":"henry"}

21:09:14.033 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 217.51
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 15:39:14 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Created Successfully

21:09:14.053 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
21:09:14.066 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > DELETE http://127.0.0.1:5000/user/16
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

21:09:14.230 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 162.47
1 < 500
1 < Connection: close
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 15:39:14 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
1 < X-XSS-Protection: 0
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
  "http://www.w3.org/TR/html4/loose.dtd">
<html>
  <head>
    <title>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"
        type="text/css">
    <!-- We need to make sure this has a favicon so that the debugger does
         not by accident trigger a request to /favicon.ico which might
         change the application state. -->
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js"></script>
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script type="text/javascript">
      var TRACEBACK = 2371604320664,
          CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "oiNCkKA32okpVbSfZqpA";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>sqlalchemy.orm.exc.UnmappedInstanceError</h1>
<div class="detail">
  <p class="errormsg">sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  
  <ul><li><div class="frame" id="frame-2371606792736">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2012</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>if self._warn_on_events:</pre>
<pre class="line before"><span class="ws">            </span>self._flush_warning(&quot;Session.delete()&quot;)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line after"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line after"><span class="ws">            </span>util.raise_(</pre>
<pre class="line after"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="exc-divider">The above exception was the direct cause of the following exception:</div>
<li><div class="frame" id="frame-2371606791000">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2463</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def __repr__(self):</pre>
<pre class="line after"><span class="ws">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>
</div>

<li><div class="frame" id="frame-2371606791784">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2449</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2371606792064">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1866</em>,
      in <code class="function">handle_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># if we want to repropagate the exception, we can attempt to</pre>
<pre class="line before"><span class="ws">            </span># raise it with the whole traceback in case we can do that</pre>
<pre class="line before"><span class="ws">            </span># (the function was actually called from the except part)</pre>
<pre class="line before"><span class="ws">            </span># otherwise, we just raise the error again</pre>
<pre class="line before"><span class="ws">            </span>if exc_value is e:</pre>
<pre class="line current"><span class="ws">                </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">            </span>else:</pre>
<pre class="line after"><span class="ws">                </span>raise e</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self.log_exception((exc_type, exc_value, tb))</pre>
<pre class="line after"><span class="ws">        </span>server_error = InternalServerError()</pre></div>
</div>

<li><div class="frame" id="frame-2371606793688">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-2371606793464">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2446</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2371606792288">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1951</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Given the return value from a view function this finalizes</pre>
<pre class="line after"><span class="ws">        </span>the request by converting it into a response and invoking the</pre></div>
</div>

<li><div class="frame" id="frame-2371606790832">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1820</em>,
      in <code class="function">handle_user_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>return self.handle_http_exception(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>handler = self._find_error_handler(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>if handler is None:</pre>
<pre class="line current"><span class="ws">            </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">        </span>return handler(e)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def handle_exception(self, e):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Handle an exception that did not have an error handler</pre>
<pre class="line after"><span class="ws">        </span>associated with it, or that was raised from an error handler.</pre></div>
</div>

<li><div class="frame" id="frame-2371606792960">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-2371606793352">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1949</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre></div>
</div>

<li><div class="frame" id="frame-2371606790384">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1935</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre>
<pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line current"><span class="ws">        </span>return self.view_functions[rule.endpoint](**req.view_args)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2371606791952">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">89</em>,
      in <code class="function">view</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>constructor of the class.</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>def view(*args, **kwargs):</pre>
<pre class="line before"><span class="ws">            </span>self = view.view_class(*class_args, **class_kwargs)</pre>
<pre class="line current"><span class="ws">            </span>return self.dispatch_request(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if cls.decorators:</pre>
<pre class="line after"><span class="ws">            </span>view.__name__ = name</pre>
<pre class="line after"><span class="ws">            </span>view.__module__ = cls.__module__</pre>
<pre class="line after"><span class="ws">            </span>for decorator in cls.decorators:</pre></div>
</div>

<li><div class="frame" id="frame-2371606792624">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">163</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># retry with GET.</pre>
<pre class="line before"><span class="ws">        </span>if meth is None and request.method == &quot;HEAD&quot;:</pre>
<pre class="line before"><span class="ws">            </span>meth = getattr(self, &quot;get&quot;, None)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>assert meth is not None, &quot;Unimplemented method %r&quot; % request.method</pre>
<pre class="line current"><span class="ws">        </span>return meth(*args, **kwargs)</pre></div>
</div>

<li><div class="frame" id="frame-2371606792008">
  <h4>File <cite class="filename">"C:\Users\admin\PycharmProjects\TrainingTask\app.py"</cite>,
      line <em class="line">112</em>,
      in <code class="function">delete</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                  </span>type: array</pre>
<pre class="line before"><span class="ws">                  </span>items:</pre>
<pre class="line before"><span class="ws">                    </span>$ref: '#/definitions/User'</pre>
<pre class="line before"><span class="ws">                </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>data = UserModel.query.get(user_id)</pre>
<pre class="line current"><span class="ws">        </span>db.session.delete(data)</pre>
<pre class="line after"><span class="ws">        </span>db.session.commit()</pre>
<pre class="line after"><span class="ws">        </span>return jsonify(UserModelSchema().dump(data))</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def put(self, user_id):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;</pre></div>
</div>

<li><div class="frame" id="frame-2371606791392">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py"</cite>,
      line <em class="line">162</em>,
      in <code class="function">do</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span>&quot;&quot;&quot;Old name for backwards compatibility.&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>def instrument(name):</pre>
<pre class="line before"><span class="ws">    </span>def do(self, *args, **kwargs):</pre>
<pre class="line current"><span class="ws">        </span>return getattr(self.registry(), name)(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>return do</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>for meth in Session.public_methods:</pre></div>
</div>

<li><div class="frame" id="frame-2371606791448">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2015</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line before"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line before"><span class="ws">            </span>util.raise_(</pre>
<pre class="line current"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self._delete_impl(state, instance, head=True)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _delete_impl(self, state, obj, head):</pre></div>
</div>

<li><div class="frame" id="frame-2371606790496">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py"</cite>,
      line <em class="line">178</em>,
      in <code class="function">raise_</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># intermediary exception does not change, but we can't figure</pre>
<pre class="line before"><span class="ws">            </span># that out.</pre>
<pre class="line before"><span class="ws">            </span>exception.__cause__ = replace_context</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>raise exception</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre>
<pre class="line after"><span class="ws">            </span># credit to</pre>
<pre class="line after"><span class="ws">            </span># https://cosmicpercolator.com/2016/01/13/exception-leaks-in-python-2-and-3/</pre>
<pre class="line after"><span class="ws">            </span># as the __traceback__ object creates a cycle</pre>
<pre class="line after"><span class="ws">            </span>del exception, replace_context, from_, with_traceback</pre></div>
</div>
</ul>
  <blockquote>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</blockquote>
</div>

<div class="plain">
  <form action="/?__debugger__=yes&amp;cmd=paste" method="post">
    <p>
      <input type="hidden" name="language" value="pytb">
      This is the Copy/Paste friendly version of the traceback.  <span
      class="pastemessage">You can also paste this traceback into
      a <a href="https://gist.github.com/">gist</a>:
      <input type="submit" value="create paste"></span>
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2449, in wsgi_app
    response = self.handle_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 163, in dispatch_request
    return meth(*args, **kwargs)
  File &quot;C:\Users\admin\PycharmProjects\TrainingTask\app.py&quot;, line 112, in delete
    db.session.delete(data)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py&quot;, line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py&quot;, line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</textarea>
  </form>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2449, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 163, in dispatch_request
    return meth(*args, **kwargs)
  File "C:\Users\admin\PycharmProjects\TrainingTask\app.py", line 112, in delete
    db.session.delete(data)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py", line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped

-->


21:09:14.270 [ForkJoinPool-1-worker-1] WARN  com.intuit.karate - xml parsing failed, response data type set to string: org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 5; The element type "link" must be terminated by the matching end-tag "</link>".
21:09:14.270 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - status code was: 500, expected: 200, response time: 162, url: http://127.0.0.1:5000/user/16, response: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
  "http://www.w3.org/TR/html4/loose.dtd">
<html>
  <head>
    <title>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"
        type="text/css">
    <!-- We need to make sure this has a favicon so that the debugger does
         not by accident trigger a request to /favicon.ico which might
         change the application state. -->
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js"></script>
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script type="text/javascript">
      var TRACEBACK = 2371604320664,
          CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "oiNCkKA32okpVbSfZqpA";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>sqlalchemy.orm.exc.UnmappedInstanceError</h1>
<div class="detail">
  <p class="errormsg">sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  
  <ul><li><div class="frame" id="frame-2371606792736">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2012</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>if self._warn_on_events:</pre>
<pre class="line before"><span class="ws">            </span>self._flush_warning(&quot;Session.delete()&quot;)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line after"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line after"><span class="ws">            </span>util.raise_(</pre>
<pre class="line after"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="exc-divider">The above exception was the direct cause of the following exception:</div>
<li><div class="frame" id="frame-2371606791000">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2463</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def __repr__(self):</pre>
<pre class="line after"><span class="ws">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>
</div>

<li><div class="frame" id="frame-2371606791784">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2449</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2371606792064">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1866</em>,
      in <code class="function">handle_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># if we want to repropagate the exception, we can attempt to</pre>
<pre class="line before"><span class="ws">            </span># raise it with the whole traceback in case we can do that</pre>
<pre class="line before"><span class="ws">            </span># (the function was actually called from the except part)</pre>
<pre class="line before"><span class="ws">            </span># otherwise, we just raise the error again</pre>
<pre class="line before"><span class="ws">            </span>if exc_value is e:</pre>
<pre class="line current"><span class="ws">                </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">            </span>else:</pre>
<pre class="line after"><span class="ws">                </span>raise e</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self.log_exception((exc_type, exc_value, tb))</pre>
<pre class="line after"><span class="ws">        </span>server_error = InternalServerError()</pre></div>
</div>

<li><div class="frame" id="frame-2371606793688">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-2371606793464">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2446</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2371606792288">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1951</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Given the return value from a view function this finalizes</pre>
<pre class="line after"><span class="ws">        </span>the request by converting it into a response and invoking the</pre></div>
</div>

<li><div class="frame" id="frame-2371606790832">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1820</em>,
      in <code class="function">handle_user_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>return self.handle_http_exception(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>handler = self._find_error_handler(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>if handler is None:</pre>
<pre class="line current"><span class="ws">            </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">        </span>return handler(e)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def handle_exception(self, e):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Handle an exception that did not have an error handler</pre>
<pre class="line after"><span class="ws">        </span>associated with it, or that was raised from an error handler.</pre></div>
</div>

<li><div class="frame" id="frame-2371606792960">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-2371606793352">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1949</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre></div>
</div>

<li><div class="frame" id="frame-2371606790384">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1935</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre>
<pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line current"><span class="ws">        </span>return self.view_functions[rule.endpoint](**req.view_args)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2371606791952">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">89</em>,
      in <code class="function">view</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>constructor of the class.</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>def view(*args, **kwargs):</pre>
<pre class="line before"><span class="ws">            </span>self = view.view_class(*class_args, **class_kwargs)</pre>
<pre class="line current"><span class="ws">            </span>return self.dispatch_request(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if cls.decorators:</pre>
<pre class="line after"><span class="ws">            </span>view.__name__ = name</pre>
<pre class="line after"><span class="ws">            </span>view.__module__ = cls.__module__</pre>
<pre class="line after"><span class="ws">            </span>for decorator in cls.decorators:</pre></div>
</div>

<li><div class="frame" id="frame-2371606792624">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">163</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># retry with GET.</pre>
<pre class="line before"><span class="ws">        </span>if meth is None and request.method == &quot;HEAD&quot;:</pre>
<pre class="line before"><span class="ws">            </span>meth = getattr(self, &quot;get&quot;, None)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>assert meth is not None, &quot;Unimplemented method %r&quot; % request.method</pre>
<pre class="line current"><span class="ws">        </span>return meth(*args, **kwargs)</pre></div>
</div>

<li><div class="frame" id="frame-2371606792008">
  <h4>File <cite class="filename">"C:\Users\admin\PycharmProjects\TrainingTask\app.py"</cite>,
      line <em class="line">112</em>,
      in <code class="function">delete</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                  </span>type: array</pre>
<pre class="line before"><span class="ws">                  </span>items:</pre>
<pre class="line before"><span class="ws">                    </span>$ref: '#/definitions/User'</pre>
<pre class="line before"><span class="ws">                </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>data = UserModel.query.get(user_id)</pre>
<pre class="line current"><span class="ws">        </span>db.session.delete(data)</pre>
<pre class="line after"><span class="ws">        </span>db.session.commit()</pre>
<pre class="line after"><span class="ws">        </span>return jsonify(UserModelSchema().dump(data))</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def put(self, user_id):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;</pre></div>
</div>

<li><div class="frame" id="frame-2371606791392">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py"</cite>,
      line <em class="line">162</em>,
      in <code class="function">do</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span>&quot;&quot;&quot;Old name for backwards compatibility.&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>def instrument(name):</pre>
<pre class="line before"><span class="ws">    </span>def do(self, *args, **kwargs):</pre>
<pre class="line current"><span class="ws">        </span>return getattr(self.registry(), name)(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>return do</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>for meth in Session.public_methods:</pre></div>
</div>

<li><div class="frame" id="frame-2371606791448">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2015</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line before"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line before"><span class="ws">            </span>util.raise_(</pre>
<pre class="line current"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self._delete_impl(state, instance, head=True)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _delete_impl(self, state, obj, head):</pre></div>
</div>

<li><div class="frame" id="frame-2371606790496">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py"</cite>,
      line <em class="line">178</em>,
      in <code class="function">raise_</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># intermediary exception does not change, but we can't figure</pre>
<pre class="line before"><span class="ws">            </span># that out.</pre>
<pre class="line before"><span class="ws">            </span>exception.__cause__ = replace_context</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>raise exception</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre>
<pre class="line after"><span class="ws">            </span># credit to</pre>
<pre class="line after"><span class="ws">            </span># https://cosmicpercolator.com/2016/01/13/exception-leaks-in-python-2-and-3/</pre>
<pre class="line after"><span class="ws">            </span># as the __traceback__ object creates a cycle</pre>
<pre class="line after"><span class="ws">            </span>del exception, replace_context, from_, with_traceback</pre></div>
</div>
</ul>
  <blockquote>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</blockquote>
</div>

<div class="plain">
  <form action="/?__debugger__=yes&amp;cmd=paste" method="post">
    <p>
      <input type="hidden" name="language" value="pytb">
      This is the Copy/Paste friendly version of the traceback.  <span
      class="pastemessage">You can also paste this traceback into
      a <a href="https://gist.github.com/">gist</a>:
      <input type="submit" value="create paste"></span>
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2449, in wsgi_app
    response = self.handle_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 163, in dispatch_request
    return meth(*args, **kwargs)
  File &quot;C:\Users\admin\PycharmProjects\TrainingTask\app.py&quot;, line 112, in delete
    db.session.delete(data)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py&quot;, line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py&quot;, line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</textarea>
  </form>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2449, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 163, in dispatch_request
    return meth(*args, **kwargs)
  File "C:\Users\admin\PycharmProjects\TrainingTask\app.py", line 112, in delete
    db.session.delete(data)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py", line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped

-->

21:09:14.313 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
21:09:14.316 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

21:09:14.351 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 30.89
1 < 200
1 < Content-Length: 1353
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 15:39:14 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
[
  {
    "email": "balaji@gmail.com", 
    "id": 1, 
    "name": "balaji", 
    "password": "sai"
  }, 
  {
    "email": "ram@gmail.com", 
    "id": 2, 
    "name": "ram", 
    "password": "sai"
  }, 
  {
    "email": "Lusy12@gmail.com", 
    "id": 3, 
    "name": "Lusy", 
    "password": "1234we"
  }, 
  {
    "email": "john@gmail.com", 
    "id": 6, 
    "name": "John Smith", 
    "password": "balaji"
  }, 
  {
    "email": "jack@gmail.com", 
    "id": 8, 
    "name": "jack", 
    "password": "jack"
  }, 
  {
    "email": "john@gmail.com", 
    "id": 9, 
    "name": "john", 
    "password": "john"
  }, 
  {
    "email": "mary@gmail.com", 
    "id": 13, 
    "name": "mary", 
    "password": "mary"
  }, 
  {
    "email": "jackson@gmail.com", 
    "id": 14, 
    "name": "jackson", 
    "password": "jackson"
  }, 
  {
    "email": "henry@gmail.com", 
    "id": 15, 
    "name": "henry", 
    "password": "henry"
  }, 
  {
    "email": "magrit@gmail.com", 
    "id": 17, 
    "name": "magrit", 
    "password": "henry"
  }, 
  {
    "email": "harley@gmail.com", 
    "id": 18, 
    "name": "harley", 
    "password": "henry"
  }, 
  {
    "email": "harley@gmail.com", 
    "id": 19, 
    "name": "harley", 
    "password": "henry"
  }, 
  {
    "email": "harley@gmail.com", 
    "id": 20, 
    "name": "harley", 
    "password": "henry"
  }
]


21:09:14.364 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
21:09:14.373 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/user/2
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

21:09:14.396 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 21.87
1 < 200
1 < Content-Length: 83
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 15:39:14 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
{
  "email": "ram@gmail.com", 
  "id": 2, 
  "name": "ram", 
  "password": "sai"
}


21:09:14.436 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
21:09:14.446 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > PUT http://127.0.0.1:5000/user/13
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 58
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"mary","email":"mary@gmail.com","password":"mary"}

21:09:14.463 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 16.37
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Mon, 30 Mar 2020 15:39:14 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Updated Successfully

21:09:14.778 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
22:31:28.998 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
22:31:29.613 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
22:31:31.255 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > POST http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 63
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"harley","email":"harley@gmail.com","password":"henry"}

22:31:32.285 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect, http call failed after 1030 milliseconds for URL: http://127.0.0.1:5000/users
22:31:32.286 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - http request failed: 
org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect
22:31:32.311 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
22:31:32.326 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > DELETE http://127.0.0.1:5000/user/16
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

22:31:33.328 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect, http call failed after 1002 milliseconds for URL: http://127.0.0.1:5000/user/16
22:31:33.329 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - http request failed: 
org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect
22:31:33.359 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
22:31:33.363 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

22:31:34.366 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect, http call failed after 1003 milliseconds for URL: http://127.0.0.1:5000/users
22:31:34.367 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - http request failed: 
org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect
22:31:34.389 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
22:31:34.407 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/user/2
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

22:31:35.421 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect, http call failed after 1013 milliseconds for URL: http://127.0.0.1:5000/user/2
22:31:35.422 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - http request failed: 
org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect
22:31:35.457 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
22:31:35.464 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > PUT http://127.0.0.1:5000/user/13
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 58
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"mary","email":"mary@gmail.com","password":"mary"}

22:31:36.467 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect, http call failed after 1003 milliseconds for URL: http://127.0.0.1:5000/user/13
22:31:36.468 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - http request failed: 
org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect
22:31:36.692 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: src/test/java/examples/users/users.feature
23:10:19.872 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
23:12:25.724 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
23:12:26.501 [ForkJoinPool-1-worker-2] INFO  com.intuit.karate - karate.env system property was:  
23:12:26.501 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
23:12:27.982 [ForkJoinPool-1-worker-2] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/user/2
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

23:12:27.982 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

23:12:28.314 [ForkJoinPool-1-worker-2] DEBUG com.intuit.karate - response time in milliseconds: 319.12
1 < 200
1 < Content-Length: 83
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 17:42:28 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
{
  "email": "ram@gmail.com", 
  "id": 2, 
  "name": "ram", 
  "password": "sai"
}


23:12:28.314 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 318.68
1 < 200
1 < Content-Length: 1353
1 < Content-Type: application/json
1 < Date: Mon, 30 Mar 2020 17:42:28 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
[
  {
    "email": "balaji@gmail.com", 
    "id": 1, 
    "name": "balaji", 
    "password": "sai"
  }, 
  {
    "email": "ram@gmail.com", 
    "id": 2, 
    "name": "ram", 
    "password": "sai"
  }, 
  {
    "email": "Lusy12@gmail.com", 
    "id": 3, 
    "name": "Lusy", 
    "password": "1234we"
  }, 
  {
    "email": "john@gmail.com", 
    "id": 6, 
    "name": "John Smith", 
    "password": "balaji"
  }, 
  {
    "email": "jack@gmail.com", 
    "id": 8, 
    "name": "jack", 
    "password": "jack"
  }, 
  {
    "email": "john@gmail.com", 
    "id": 9, 
    "name": "john", 
    "password": "john"
  }, 
  {
    "email": "mary@gmail.com", 
    "id": 13, 
    "name": "mary", 
    "password": "mary"
  }, 
  {
    "email": "jackson@gmail.com", 
    "id": 14, 
    "name": "jackson", 
    "password": "jackson"
  }, 
  {
    "email": "henry@gmail.com", 
    "id": 15, 
    "name": "henry", 
    "password": "henry"
  }, 
  {
    "email": "magrit@gmail.com", 
    "id": 17, 
    "name": "magrit", 
    "password": "henry"
  }, 
  {
    "email": "harley@gmail.com", 
    "id": 18, 
    "name": "harley", 
    "password": "henry"
  }, 
  {
    "email": "harley@gmail.com", 
    "id": 19, 
    "name": "harley", 
    "password": "henry"
  }, 
  {
    "email": "harley@gmail.com", 
    "id": 20, 
    "name": "harley", 
    "password": "henry"
  }
]


23:12:28.414 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<pass>> feature 1 of 1: classpath:examples/users/users.feature
11:32:08.873 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
11:32:09.307 [ForkJoinPool-1-worker-4] INFO  com.intuit.karate - karate.env system property was:  
11:32:09.307 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
11:32:09.307 [ForkJoinPool-1-worker-5] INFO  com.intuit.karate - karate.env system property was:  
11:32:09.307 [ForkJoinPool-1-worker-2] INFO  com.intuit.karate - karate.env system property was:  
11:32:09.319 [ForkJoinPool-1-worker-3] INFO  com.intuit.karate - karate.env system property was:  
11:32:10.354 [ForkJoinPool-1-worker-2] DEBUG com.intuit.karate - request:
1 > DELETE http://127.0.0.1:5000/user/16
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

11:32:10.354 [ForkJoinPool-1-worker-5] DEBUG com.intuit.karate - request:
1 > PUT http://127.0.0.1:5000/user/13
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 58
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"mary","email":"mary@gmail.com","password":"mary"}

11:32:10.354 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > POST http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 63
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"harley","email":"harley@gmail.com","password":"henry"}

11:32:10.354 [ForkJoinPool-1-worker-3] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

11:32:10.354 [ForkJoinPool-1-worker-4] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/user/2
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

11:32:11.426 [ForkJoinPool-1-worker-4] ERROR com.intuit.karate - org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect, http call failed after 1056 milliseconds for URL: http://127.0.0.1:5000/user/2
11:32:11.426 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect, http call failed after 1072 milliseconds for URL: http://127.0.0.1:5000/users
11:32:11.426 [ForkJoinPool-1-worker-3] ERROR com.intuit.karate - org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect, http call failed after 1072 milliseconds for URL: http://127.0.0.1:5000/users
11:32:11.426 [ForkJoinPool-1-worker-1] ERROR com.intuit.karate - http request failed: 
org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect
11:32:11.426 [ForkJoinPool-1-worker-3] ERROR com.intuit.karate - http request failed: 
org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect
11:32:11.426 [ForkJoinPool-1-worker-4] ERROR com.intuit.karate - http request failed: 
org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect
11:32:11.426 [ForkJoinPool-1-worker-5] ERROR com.intuit.karate - org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect, http call failed after 1072 milliseconds for URL: http://127.0.0.1:5000/user/13
11:32:11.426 [ForkJoinPool-1-worker-5] ERROR com.intuit.karate - http request failed: 
org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect
11:32:11.426 [ForkJoinPool-1-worker-2] ERROR com.intuit.karate - org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect, http call failed after 1072 milliseconds for URL: http://127.0.0.1:5000/user/16
11:32:11.426 [ForkJoinPool-1-worker-2] ERROR com.intuit.karate - http request failed: 
org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:5000 [/127.0.0.1] failed: Connection refused: connect
11:32:11.573 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: classpath:examples/users/users.feature
11:34:13.520 [main] INFO  com.intuit.karate.Runner - waiting for parallel features to complete ...
11:34:13.895 [ForkJoinPool-1-worker-3] INFO  com.intuit.karate - karate.env system property was:  
11:34:13.895 [ForkJoinPool-1-worker-1] INFO  com.intuit.karate - karate.env system property was:  
11:34:13.895 [ForkJoinPool-1-worker-5] INFO  com.intuit.karate - karate.env system property was:  
11:34:13.895 [ForkJoinPool-1-worker-2] INFO  com.intuit.karate - karate.env system property was:  
11:34:13.895 [ForkJoinPool-1-worker-4] INFO  com.intuit.karate - karate.env system property was:  
11:34:14.969 [ForkJoinPool-1-worker-2] DEBUG com.intuit.karate - request:
1 > DELETE http://127.0.0.1:5000/user/16
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

11:34:14.969 [ForkJoinPool-1-worker-4] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/user/2
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

11:34:14.969 [ForkJoinPool-1-worker-3] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

11:34:14.974 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - request:
1 > POST http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 63
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"harley","email":"harley@gmail.com","password":"henry"}

11:34:14.975 [ForkJoinPool-1-worker-5] DEBUG com.intuit.karate - request:
1 > PUT http://127.0.0.1:5000/user/13
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 58
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"mary","email":"mary@gmail.com","password":"mary"}

11:34:15.663 [ForkJoinPool-1-worker-3] DEBUG com.intuit.karate - response time in milliseconds: 625.80
1 < 200
1 < Content-Length: 1353
1 < Content-Type: application/json
1 < Date: Tue, 31 Mar 2020 06:04:15 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
[
  {
    "email": "balaji@gmail.com", 
    "id": 1, 
    "name": "balaji", 
    "password": "sai"
  }, 
  {
    "email": "ram@gmail.com", 
    "id": 2, 
    "name": "ram", 
    "password": "sai"
  }, 
  {
    "email": "Lusy12@gmail.com", 
    "id": 3, 
    "name": "Lusy", 
    "password": "1234we"
  }, 
  {
    "email": "john@gmail.com", 
    "id": 6, 
    "name": "John Smith", 
    "password": "balaji"
  }, 
  {
    "email": "jack@gmail.com", 
    "id": 8, 
    "name": "jack", 
    "password": "jack"
  }, 
  {
    "email": "john@gmail.com", 
    "id": 9, 
    "name": "john", 
    "password": "john"
  }, 
  {
    "email": "mary@gmail.com", 
    "id": 13, 
    "name": "mary", 
    "password": "mary"
  }, 
  {
    "email": "jackson@gmail.com", 
    "id": 14, 
    "name": "jackson", 
    "password": "jackson"
  }, 
  {
    "email": "henry@gmail.com", 
    "id": 15, 
    "name": "henry", 
    "password": "henry"
  }, 
  {
    "email": "magrit@gmail.com", 
    "id": 17, 
    "name": "magrit", 
    "password": "henry"
  }, 
  {
    "email": "harley@gmail.com", 
    "id": 18, 
    "name": "harley", 
    "password": "henry"
  }, 
  {
    "email": "harley@gmail.com", 
    "id": 19, 
    "name": "harley", 
    "password": "henry"
  }, 
  {
    "email": "harley@gmail.com", 
    "id": 20, 
    "name": "harley", 
    "password": "henry"
  }
]


11:34:15.663 [ForkJoinPool-1-worker-4] DEBUG com.intuit.karate - response time in milliseconds: 626.89
1 < 200
1 < Content-Length: 83
1 < Content-Type: application/json
1 < Date: Tue, 31 Mar 2020 06:04:15 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
{
  "email": "ram@gmail.com", 
  "id": 2, 
  "name": "ram", 
  "password": "sai"
}


11:34:15.680 [ForkJoinPool-1-worker-5] DEBUG com.intuit.karate - response time in milliseconds: 607.73
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Tue, 31 Mar 2020 06:04:15 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Updated Successfully

11:34:15.685 [ForkJoinPool-1-worker-1] DEBUG com.intuit.karate - response time in milliseconds: 709.34
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Tue, 31 Mar 2020 06:04:15 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Created Successfully

11:34:16.129 [ForkJoinPool-1-worker-2] DEBUG com.intuit.karate - response time in milliseconds: 1157.35
1 < 500
1 < Connection: close
1 < Content-Type: text/html; charset=utf-8
1 < Date: Tue, 31 Mar 2020 06:04:16 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
1 < X-XSS-Protection: 0
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
  "http://www.w3.org/TR/html4/loose.dtd">
<html>
  <head>
    <title>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"
        type="text/css">
    <!-- We need to make sure this has a favicon so that the debugger does
         not by accident trigger a request to /favicon.ico which might
         change the application state. -->
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js"></script>
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script type="text/javascript">
      var TRACEBACK = 1829687083696,
          CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "zvtj5Ifo8kbkpxF6bHJ2";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>sqlalchemy.orm.exc.UnmappedInstanceError</h1>
<div class="detail">
  <p class="errormsg">sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  
  <ul><li><div class="frame" id="frame-1829687083416">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2012</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>if self._warn_on_events:</pre>
<pre class="line before"><span class="ws">            </span>self._flush_warning(&quot;Session.delete()&quot;)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line after"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line after"><span class="ws">            </span>util.raise_(</pre>
<pre class="line after"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="exc-divider">The above exception was the direct cause of the following exception:</div>
<li><div class="frame" id="frame-1829687084704">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2463</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def __repr__(self):</pre>
<pre class="line after"><span class="ws">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>
</div>

<li><div class="frame" id="frame-1829687203768">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2449</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1829687020176">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1866</em>,
      in <code class="function">handle_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># if we want to repropagate the exception, we can attempt to</pre>
<pre class="line before"><span class="ws">            </span># raise it with the whole traceback in case we can do that</pre>
<pre class="line before"><span class="ws">            </span># (the function was actually called from the except part)</pre>
<pre class="line before"><span class="ws">            </span># otherwise, we just raise the error again</pre>
<pre class="line before"><span class="ws">            </span>if exc_value is e:</pre>
<pre class="line current"><span class="ws">                </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">            </span>else:</pre>
<pre class="line after"><span class="ws">                </span>raise e</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self.log_exception((exc_type, exc_value, tb))</pre>
<pre class="line after"><span class="ws">        </span>server_error = InternalServerError()</pre></div>
</div>

<li><div class="frame" id="frame-1829687020736">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-1829687020792">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2446</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1829687202928">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1951</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Given the return value from a view function this finalizes</pre>
<pre class="line after"><span class="ws">        </span>the request by converting it into a response and invoking the</pre></div>
</div>

<li><div class="frame" id="frame-1829687203040">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1820</em>,
      in <code class="function">handle_user_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>return self.handle_http_exception(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>handler = self._find_error_handler(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>if handler is None:</pre>
<pre class="line current"><span class="ws">            </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">        </span>return handler(e)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def handle_exception(self, e):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Handle an exception that did not have an error handler</pre>
<pre class="line after"><span class="ws">        </span>associated with it, or that was raised from an error handler.</pre></div>
</div>

<li><div class="frame" id="frame-1829687203992">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-1829687204048">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1949</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre></div>
</div>

<li><div class="frame" id="frame-1829687202984">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1935</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre>
<pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line current"><span class="ws">        </span>return self.view_functions[rule.endpoint](**req.view_args)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1829687083360">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">89</em>,
      in <code class="function">view</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>constructor of the class.</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>def view(*args, **kwargs):</pre>
<pre class="line before"><span class="ws">            </span>self = view.view_class(*class_args, **class_kwargs)</pre>
<pre class="line current"><span class="ws">            </span>return self.dispatch_request(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if cls.decorators:</pre>
<pre class="line after"><span class="ws">            </span>view.__name__ = name</pre>
<pre class="line after"><span class="ws">            </span>view.__module__ = cls.__module__</pre>
<pre class="line after"><span class="ws">            </span>for decorator in cls.decorators:</pre></div>
</div>

<li><div class="frame" id="frame-1829687204160">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">163</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># retry with GET.</pre>
<pre class="line before"><span class="ws">        </span>if meth is None and request.method == &quot;HEAD&quot;:</pre>
<pre class="line before"><span class="ws">            </span>meth = getattr(self, &quot;get&quot;, None)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>assert meth is not None, &quot;Unimplemented method %r&quot; % request.method</pre>
<pre class="line current"><span class="ws">        </span>return meth(*args, **kwargs)</pre></div>
</div>

<li><div class="frame" id="frame-1829687083864">
  <h4>File <cite class="filename">"C:\Users\admin\PycharmProjects\TrainingTask\app.py"</cite>,
      line <em class="line">112</em>,
      in <code class="function">delete</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                  </span>type: array</pre>
<pre class="line before"><span class="ws">                  </span>items:</pre>
<pre class="line before"><span class="ws">                    </span>$ref: '#/definitions/User'</pre>
<pre class="line before"><span class="ws">                </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>data = UserModel.query.get(user_id)</pre>
<pre class="line current"><span class="ws">        </span>db.session.delete(data)</pre>
<pre class="line after"><span class="ws">        </span>db.session.commit()</pre>
<pre class="line after"><span class="ws">        </span>return jsonify(UserModelSchema().dump(data))</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def put(self, user_id):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;</pre></div>
</div>

<li><div class="frame" id="frame-1829687083808">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py"</cite>,
      line <em class="line">162</em>,
      in <code class="function">do</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span>&quot;&quot;&quot;Old name for backwards compatibility.&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>def instrument(name):</pre>
<pre class="line before"><span class="ws">    </span>def do(self, *args, **kwargs):</pre>
<pre class="line current"><span class="ws">        </span>return getattr(self.registry(), name)(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>return do</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>for meth in Session.public_methods:</pre></div>
</div>

<li><div class="frame" id="frame-1829687203712">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2015</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line before"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line before"><span class="ws">            </span>util.raise_(</pre>
<pre class="line current"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self._delete_impl(state, instance, head=True)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _delete_impl(self, state, obj, head):</pre></div>
</div>

<li><div class="frame" id="frame-1829664689288">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py"</cite>,
      line <em class="line">178</em>,
      in <code class="function">raise_</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># intermediary exception does not change, but we can't figure</pre>
<pre class="line before"><span class="ws">            </span># that out.</pre>
<pre class="line before"><span class="ws">            </span>exception.__cause__ = replace_context</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>raise exception</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre>
<pre class="line after"><span class="ws">            </span># credit to</pre>
<pre class="line after"><span class="ws">            </span># https://cosmicpercolator.com/2016/01/13/exception-leaks-in-python-2-and-3/</pre>
<pre class="line after"><span class="ws">            </span># as the __traceback__ object creates a cycle</pre>
<pre class="line after"><span class="ws">            </span>del exception, replace_context, from_, with_traceback</pre></div>
</div>
</ul>
  <blockquote>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</blockquote>
</div>

<div class="plain">
  <form action="/?__debugger__=yes&amp;cmd=paste" method="post">
    <p>
      <input type="hidden" name="language" value="pytb">
      This is the Copy/Paste friendly version of the traceback.  <span
      class="pastemessage">You can also paste this traceback into
      a <a href="https://gist.github.com/">gist</a>:
      <input type="submit" value="create paste"></span>
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2449, in wsgi_app
    response = self.handle_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 163, in dispatch_request
    return meth(*args, **kwargs)
  File &quot;C:\Users\admin\PycharmProjects\TrainingTask\app.py&quot;, line 112, in delete
    db.session.delete(data)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py&quot;, line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py&quot;, line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</textarea>
  </form>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2449, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 163, in dispatch_request
    return meth(*args, **kwargs)
  File "C:\Users\admin\PycharmProjects\TrainingTask\app.py", line 112, in delete
    db.session.delete(data)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py", line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped

-->


11:34:16.200 [ForkJoinPool-1-worker-2] WARN  com.intuit.karate - xml parsing failed, response data type set to string: org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 5; The element type "link" must be terminated by the matching end-tag "</link>".
11:34:16.200 [ForkJoinPool-1-worker-2] ERROR com.intuit.karate - status code was: 500, expected: 200, response time: 1157, url: http://127.0.0.1:5000/user/16, response: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
  "http://www.w3.org/TR/html4/loose.dtd">
<html>
  <head>
    <title>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"
        type="text/css">
    <!-- We need to make sure this has a favicon so that the debugger does
         not by accident trigger a request to /favicon.ico which might
         change the application state. -->
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js"></script>
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script type="text/javascript">
      var TRACEBACK = 1829687083696,
          CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "zvtj5Ifo8kbkpxF6bHJ2";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>sqlalchemy.orm.exc.UnmappedInstanceError</h1>
<div class="detail">
  <p class="errormsg">sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  
  <ul><li><div class="frame" id="frame-1829687083416">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2012</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>if self._warn_on_events:</pre>
<pre class="line before"><span class="ws">            </span>self._flush_warning(&quot;Session.delete()&quot;)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line after"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line after"><span class="ws">            </span>util.raise_(</pre>
<pre class="line after"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="exc-divider">The above exception was the direct cause of the following exception:</div>
<li><div class="frame" id="frame-1829687084704">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2463</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def __repr__(self):</pre>
<pre class="line after"><span class="ws">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>
</div>

<li><div class="frame" id="frame-1829687203768">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2449</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1829687020176">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1866</em>,
      in <code class="function">handle_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># if we want to repropagate the exception, we can attempt to</pre>
<pre class="line before"><span class="ws">            </span># raise it with the whole traceback in case we can do that</pre>
<pre class="line before"><span class="ws">            </span># (the function was actually called from the except part)</pre>
<pre class="line before"><span class="ws">            </span># otherwise, we just raise the error again</pre>
<pre class="line before"><span class="ws">            </span>if exc_value is e:</pre>
<pre class="line current"><span class="ws">                </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">            </span>else:</pre>
<pre class="line after"><span class="ws">                </span>raise e</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self.log_exception((exc_type, exc_value, tb))</pre>
<pre class="line after"><span class="ws">        </span>server_error = InternalServerError()</pre></div>
</div>

<li><div class="frame" id="frame-1829687020736">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-1829687020792">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2446</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1829687202928">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1951</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Given the return value from a view function this finalizes</pre>
<pre class="line after"><span class="ws">        </span>the request by converting it into a response and invoking the</pre></div>
</div>

<li><div class="frame" id="frame-1829687203040">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1820</em>,
      in <code class="function">handle_user_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>return self.handle_http_exception(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>handler = self._find_error_handler(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>if handler is None:</pre>
<pre class="line current"><span class="ws">            </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">        </span>return handler(e)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def handle_exception(self, e):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Handle an exception that did not have an error handler</pre>
<pre class="line after"><span class="ws">        </span>associated with it, or that was raised from an error handler.</pre></div>
</div>

<li><div class="frame" id="frame-1829687203992">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-1829687204048">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1949</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre></div>
</div>

<li><div class="frame" id="frame-1829687202984">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1935</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre>
<pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line current"><span class="ws">        </span>return self.view_functions[rule.endpoint](**req.view_args)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1829687083360">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">89</em>,
      in <code class="function">view</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>constructor of the class.</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>def view(*args, **kwargs):</pre>
<pre class="line before"><span class="ws">            </span>self = view.view_class(*class_args, **class_kwargs)</pre>
<pre class="line current"><span class="ws">            </span>return self.dispatch_request(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if cls.decorators:</pre>
<pre class="line after"><span class="ws">            </span>view.__name__ = name</pre>
<pre class="line after"><span class="ws">            </span>view.__module__ = cls.__module__</pre>
<pre class="line after"><span class="ws">            </span>for decorator in cls.decorators:</pre></div>
</div>

<li><div class="frame" id="frame-1829687204160">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">163</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># retry with GET.</pre>
<pre class="line before"><span class="ws">        </span>if meth is None and request.method == &quot;HEAD&quot;:</pre>
<pre class="line before"><span class="ws">            </span>meth = getattr(self, &quot;get&quot;, None)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>assert meth is not None, &quot;Unimplemented method %r&quot; % request.method</pre>
<pre class="line current"><span class="ws">        </span>return meth(*args, **kwargs)</pre></div>
</div>

<li><div class="frame" id="frame-1829687083864">
  <h4>File <cite class="filename">"C:\Users\admin\PycharmProjects\TrainingTask\app.py"</cite>,
      line <em class="line">112</em>,
      in <code class="function">delete</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                  </span>type: array</pre>
<pre class="line before"><span class="ws">                  </span>items:</pre>
<pre class="line before"><span class="ws">                    </span>$ref: '#/definitions/User'</pre>
<pre class="line before"><span class="ws">                </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>data = UserModel.query.get(user_id)</pre>
<pre class="line current"><span class="ws">        </span>db.session.delete(data)</pre>
<pre class="line after"><span class="ws">        </span>db.session.commit()</pre>
<pre class="line after"><span class="ws">        </span>return jsonify(UserModelSchema().dump(data))</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def put(self, user_id):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;</pre></div>
</div>

<li><div class="frame" id="frame-1829687083808">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py"</cite>,
      line <em class="line">162</em>,
      in <code class="function">do</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span>&quot;&quot;&quot;Old name for backwards compatibility.&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>def instrument(name):</pre>
<pre class="line before"><span class="ws">    </span>def do(self, *args, **kwargs):</pre>
<pre class="line current"><span class="ws">        </span>return getattr(self.registry(), name)(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>return do</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>for meth in Session.public_methods:</pre></div>
</div>

<li><div class="frame" id="frame-1829687203712">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2015</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line before"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line before"><span class="ws">            </span>util.raise_(</pre>
<pre class="line current"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self._delete_impl(state, instance, head=True)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _delete_impl(self, state, obj, head):</pre></div>
</div>

<li><div class="frame" id="frame-1829664689288">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py"</cite>,
      line <em class="line">178</em>,
      in <code class="function">raise_</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># intermediary exception does not change, but we can't figure</pre>
<pre class="line before"><span class="ws">            </span># that out.</pre>
<pre class="line before"><span class="ws">            </span>exception.__cause__ = replace_context</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>raise exception</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre>
<pre class="line after"><span class="ws">            </span># credit to</pre>
<pre class="line after"><span class="ws">            </span># https://cosmicpercolator.com/2016/01/13/exception-leaks-in-python-2-and-3/</pre>
<pre class="line after"><span class="ws">            </span># as the __traceback__ object creates a cycle</pre>
<pre class="line after"><span class="ws">            </span>del exception, replace_context, from_, with_traceback</pre></div>
</div>
</ul>
  <blockquote>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</blockquote>
</div>

<div class="plain">
  <form action="/?__debugger__=yes&amp;cmd=paste" method="post">
    <p>
      <input type="hidden" name="language" value="pytb">
      This is the Copy/Paste friendly version of the traceback.  <span
      class="pastemessage">You can also paste this traceback into
      a <a href="https://gist.github.com/">gist</a>:
      <input type="submit" value="create paste"></span>
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2449, in wsgi_app
    response = self.handle_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 163, in dispatch_request
    return meth(*args, **kwargs)
  File &quot;C:\Users\admin\PycharmProjects\TrainingTask\app.py&quot;, line 112, in delete
    db.session.delete(data)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py&quot;, line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py&quot;, line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</textarea>
  </form>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2449, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 163, in dispatch_request
    return meth(*args, **kwargs)
  File "C:\Users\admin\PycharmProjects\TrainingTask\app.py", line 112, in delete
    db.session.delete(data)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py", line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped

-->

11:34:16.335 [pool-1-thread-1] INFO  com.intuit.karate.Runner - <<fail>> feature 1 of 1: classpath:examples/users/users.feature
11:37:27.327 [main] INFO  com.intuit.karate - karate.env system property was:  
11:37:28.432 [main] DEBUG com.intuit.karate - request:
1 > POST http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 63
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"harley","email":"harley@gmail.com","password":"henry"}

11:37:28.496 [main] DEBUG com.intuit.karate - response time in milliseconds: 61.33
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Tue, 31 Mar 2020 06:07:28 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Created Successfully

11:37:28.528 [main] INFO  com.intuit.karate - karate.env system property was:  
11:37:28.541 [main] DEBUG com.intuit.karate - request:
1 > DELETE http://127.0.0.1:5000/user/16
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

11:37:28.644 [main] DEBUG com.intuit.karate - response time in milliseconds: 102.29
1 < 500
1 < Connection: close
1 < Content-Type: text/html; charset=utf-8
1 < Date: Tue, 31 Mar 2020 06:07:28 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
1 < X-XSS-Protection: 0
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
  "http://www.w3.org/TR/html4/loose.dtd">
<html>
  <head>
    <title>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"
        type="text/css">
    <!-- We need to make sure this has a favicon so that the debugger does
         not by accident trigger a request to /favicon.ico which might
         change the application state. -->
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js"></script>
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script type="text/javascript">
      var TRACEBACK = 1829690281488,
          CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "zvtj5Ifo8kbkpxF6bHJ2";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>sqlalchemy.orm.exc.UnmappedInstanceError</h1>
<div class="detail">
  <p class="errormsg">sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  
  <ul><li><div class="frame" id="frame-1829690549976">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2012</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>if self._warn_on_events:</pre>
<pre class="line before"><span class="ws">            </span>self._flush_warning(&quot;Session.delete()&quot;)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line after"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line after"><span class="ws">            </span>util.raise_(</pre>
<pre class="line after"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="exc-divider">The above exception was the direct cause of the following exception:</div>
<li><div class="frame" id="frame-1829690548744">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2463</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def __repr__(self):</pre>
<pre class="line after"><span class="ws">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>
</div>

<li><div class="frame" id="frame-1829690549360">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2449</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1829690549472">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1866</em>,
      in <code class="function">handle_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># if we want to repropagate the exception, we can attempt to</pre>
<pre class="line before"><span class="ws">            </span># raise it with the whole traceback in case we can do that</pre>
<pre class="line before"><span class="ws">            </span># (the function was actually called from the except part)</pre>
<pre class="line before"><span class="ws">            </span># otherwise, we just raise the error again</pre>
<pre class="line before"><span class="ws">            </span>if exc_value is e:</pre>
<pre class="line current"><span class="ws">                </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">            </span>else:</pre>
<pre class="line after"><span class="ws">                </span>raise e</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self.log_exception((exc_type, exc_value, tb))</pre>
<pre class="line after"><span class="ws">        </span>server_error = InternalServerError()</pre></div>
</div>

<li><div class="frame" id="frame-1829690549136">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-1829690549192">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2446</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1829690548520">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1951</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Given the return value from a view function this finalizes</pre>
<pre class="line after"><span class="ws">        </span>the request by converting it into a response and invoking the</pre></div>
</div>

<li><div class="frame" id="frame-1829690549080">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1820</em>,
      in <code class="function">handle_user_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>return self.handle_http_exception(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>handler = self._find_error_handler(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>if handler is None:</pre>
<pre class="line current"><span class="ws">            </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">        </span>return handler(e)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def handle_exception(self, e):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Handle an exception that did not have an error handler</pre>
<pre class="line after"><span class="ws">        </span>associated with it, or that was raised from an error handler.</pre></div>
</div>

<li><div class="frame" id="frame-1829690549024">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-1829690549248">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1949</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre></div>
</div>

<li><div class="frame" id="frame-1829690549584">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1935</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre>
<pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line current"><span class="ws">        </span>return self.view_functions[rule.endpoint](**req.view_args)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1829690549640">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">89</em>,
      in <code class="function">view</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>constructor of the class.</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>def view(*args, **kwargs):</pre>
<pre class="line before"><span class="ws">            </span>self = view.view_class(*class_args, **class_kwargs)</pre>
<pre class="line current"><span class="ws">            </span>return self.dispatch_request(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if cls.decorators:</pre>
<pre class="line after"><span class="ws">            </span>view.__name__ = name</pre>
<pre class="line after"><span class="ws">            </span>view.__module__ = cls.__module__</pre>
<pre class="line after"><span class="ws">            </span>for decorator in cls.decorators:</pre></div>
</div>

<li><div class="frame" id="frame-1829690549696">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">163</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># retry with GET.</pre>
<pre class="line before"><span class="ws">        </span>if meth is None and request.method == &quot;HEAD&quot;:</pre>
<pre class="line before"><span class="ws">            </span>meth = getattr(self, &quot;get&quot;, None)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>assert meth is not None, &quot;Unimplemented method %r&quot; % request.method</pre>
<pre class="line current"><span class="ws">        </span>return meth(*args, **kwargs)</pre></div>
</div>

<li><div class="frame" id="frame-1829690549528">
  <h4>File <cite class="filename">"C:\Users\admin\PycharmProjects\TrainingTask\app.py"</cite>,
      line <em class="line">112</em>,
      in <code class="function">delete</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                  </span>type: array</pre>
<pre class="line before"><span class="ws">                  </span>items:</pre>
<pre class="line before"><span class="ws">                    </span>$ref: '#/definitions/User'</pre>
<pre class="line before"><span class="ws">                </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>data = UserModel.query.get(user_id)</pre>
<pre class="line current"><span class="ws">        </span>db.session.delete(data)</pre>
<pre class="line after"><span class="ws">        </span>db.session.commit()</pre>
<pre class="line after"><span class="ws">        </span>return jsonify(UserModelSchema().dump(data))</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def put(self, user_id):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;</pre></div>
</div>

<li><div class="frame" id="frame-1829690549808">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py"</cite>,
      line <em class="line">162</em>,
      in <code class="function">do</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span>&quot;&quot;&quot;Old name for backwards compatibility.&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>def instrument(name):</pre>
<pre class="line before"><span class="ws">    </span>def do(self, *args, **kwargs):</pre>
<pre class="line current"><span class="ws">        </span>return getattr(self.registry(), name)(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>return do</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>for meth in Session.public_methods:</pre></div>
</div>

<li><div class="frame" id="frame-1829690549864">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2015</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line before"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line before"><span class="ws">            </span>util.raise_(</pre>
<pre class="line current"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self._delete_impl(state, instance, head=True)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _delete_impl(self, state, obj, head):</pre></div>
</div>

<li><div class="frame" id="frame-1829690549416">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py"</cite>,
      line <em class="line">178</em>,
      in <code class="function">raise_</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># intermediary exception does not change, but we can't figure</pre>
<pre class="line before"><span class="ws">            </span># that out.</pre>
<pre class="line before"><span class="ws">            </span>exception.__cause__ = replace_context</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>raise exception</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre>
<pre class="line after"><span class="ws">            </span># credit to</pre>
<pre class="line after"><span class="ws">            </span># https://cosmicpercolator.com/2016/01/13/exception-leaks-in-python-2-and-3/</pre>
<pre class="line after"><span class="ws">            </span># as the __traceback__ object creates a cycle</pre>
<pre class="line after"><span class="ws">            </span>del exception, replace_context, from_, with_traceback</pre></div>
</div>
</ul>
  <blockquote>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</blockquote>
</div>

<div class="plain">
  <form action="/?__debugger__=yes&amp;cmd=paste" method="post">
    <p>
      <input type="hidden" name="language" value="pytb">
      This is the Copy/Paste friendly version of the traceback.  <span
      class="pastemessage">You can also paste this traceback into
      a <a href="https://gist.github.com/">gist</a>:
      <input type="submit" value="create paste"></span>
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2449, in wsgi_app
    response = self.handle_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 163, in dispatch_request
    return meth(*args, **kwargs)
  File &quot;C:\Users\admin\PycharmProjects\TrainingTask\app.py&quot;, line 112, in delete
    db.session.delete(data)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py&quot;, line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py&quot;, line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</textarea>
  </form>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2449, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 163, in dispatch_request
    return meth(*args, **kwargs)
  File "C:\Users\admin\PycharmProjects\TrainingTask\app.py", line 112, in delete
    db.session.delete(data)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py", line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped

-->


11:37:28.691 [main] WARN  com.intuit.karate - xml parsing failed, response data type set to string: org.xml.sax.SAXParseException; lineNumber: 22; columnNumber: 5; The element type "link" must be terminated by the matching end-tag "</link>".
11:37:28.691 [main] ERROR com.intuit.karate - status code was: 500, expected: 200, response time: 102, url: http://127.0.0.1:5000/user/16, response: <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
  "http://www.w3.org/TR/html4/loose.dtd">
<html>
  <head>
    <title>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"
        type="text/css">
    <!-- We need to make sure this has a favicon so that the debugger does
         not by accident trigger a request to /favicon.ico which might
         change the application state. -->
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js"></script>
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script type="text/javascript">
      var TRACEBACK = 1829690281488,
          CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "zvtj5Ifo8kbkpxF6bHJ2";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>sqlalchemy.orm.exc.UnmappedInstanceError</h1>
<div class="detail">
  <p class="errormsg">sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  
  <ul><li><div class="frame" id="frame-1829690549976">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2012</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>if self._warn_on_events:</pre>
<pre class="line before"><span class="ws">            </span>self._flush_warning(&quot;Session.delete()&quot;)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line after"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line after"><span class="ws">            </span>util.raise_(</pre>
<pre class="line after"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="exc-divider">The above exception was the direct cause of the following exception:</div>
<li><div class="frame" id="frame-1829690548744">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2463</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def __repr__(self):</pre>
<pre class="line after"><span class="ws">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>
</div>

<li><div class="frame" id="frame-1829690549360">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2449</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-1829690549472">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1866</em>,
      in <code class="function">handle_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># if we want to repropagate the exception, we can attempt to</pre>
<pre class="line before"><span class="ws">            </span># raise it with the whole traceback in case we can do that</pre>
<pre class="line before"><span class="ws">            </span># (the function was actually called from the except part)</pre>
<pre class="line before"><span class="ws">            </span># otherwise, we just raise the error again</pre>
<pre class="line before"><span class="ws">            </span>if exc_value is e:</pre>
<pre class="line current"><span class="ws">                </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">            </span>else:</pre>
<pre class="line after"><span class="ws">                </span>raise e</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self.log_exception((exc_type, exc_value, tb))</pre>
<pre class="line after"><span class="ws">        </span>server_error = InternalServerError()</pre></div>
</div>

<li><div class="frame" id="frame-1829690549136">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-1829690549192">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">2446</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-1829690548520">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1951</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Given the return value from a view function this finalizes</pre>
<pre class="line after"><span class="ws">        </span>the request by converting it into a response and invoking the</pre></div>
</div>

<li><div class="frame" id="frame-1829690549080">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1820</em>,
      in <code class="function">handle_user_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>return self.handle_http_exception(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>handler = self._find_error_handler(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>if handler is None:</pre>
<pre class="line current"><span class="ws">            </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">        </span>return handler(e)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def handle_exception(self, e):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Handle an exception that did not have an error handler</pre>
<pre class="line after"><span class="ws">        </span>associated with it, or that was raised from an error handler.</pre></div>
</div>

<li><div class="frame" id="frame-1829690549024">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-1829690549248">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1949</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre></div>
</div>

<li><div class="frame" id="frame-1829690549584">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1935</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre>
<pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line current"><span class="ws">        </span>return self.view_functions[rule.endpoint](**req.view_args)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-1829690549640">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">89</em>,
      in <code class="function">view</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>constructor of the class.</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>def view(*args, **kwargs):</pre>
<pre class="line before"><span class="ws">            </span>self = view.view_class(*class_args, **class_kwargs)</pre>
<pre class="line current"><span class="ws">            </span>return self.dispatch_request(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>if cls.decorators:</pre>
<pre class="line after"><span class="ws">            </span>view.__name__ = name</pre>
<pre class="line after"><span class="ws">            </span>view.__module__ = cls.__module__</pre>
<pre class="line after"><span class="ws">            </span>for decorator in cls.decorators:</pre></div>
</div>

<li><div class="frame" id="frame-1829690549696">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py"</cite>,
      line <em class="line">163</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span># retry with GET.</pre>
<pre class="line before"><span class="ws">        </span>if meth is None and request.method == &quot;HEAD&quot;:</pre>
<pre class="line before"><span class="ws">            </span>meth = getattr(self, &quot;get&quot;, None)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>assert meth is not None, &quot;Unimplemented method %r&quot; % request.method</pre>
<pre class="line current"><span class="ws">        </span>return meth(*args, **kwargs)</pre></div>
</div>

<li><div class="frame" id="frame-1829690549528">
  <h4>File <cite class="filename">"C:\Users\admin\PycharmProjects\TrainingTask\app.py"</cite>,
      line <em class="line">112</em>,
      in <code class="function">delete</code></h4>
  <div class="source "><pre class="line before"><span class="ws">                  </span>type: array</pre>
<pre class="line before"><span class="ws">                  </span>items:</pre>
<pre class="line before"><span class="ws">                    </span>$ref: '#/definitions/User'</pre>
<pre class="line before"><span class="ws">                </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>data = UserModel.query.get(user_id)</pre>
<pre class="line current"><span class="ws">        </span>db.session.delete(data)</pre>
<pre class="line after"><span class="ws">        </span>db.session.commit()</pre>
<pre class="line after"><span class="ws">        </span>return jsonify(UserModelSchema().dump(data))</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def put(self, user_id):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;</pre></div>
</div>

<li><div class="frame" id="frame-1829690549808">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py"</cite>,
      line <em class="line">162</em>,
      in <code class="function">do</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span>&quot;&quot;&quot;Old name for backwards compatibility.&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>def instrument(name):</pre>
<pre class="line before"><span class="ws">    </span>def do(self, *args, **kwargs):</pre>
<pre class="line current"><span class="ws">        </span>return getattr(self.registry(), name)(*args, **kwargs)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>return do</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>for meth in Session.public_methods:</pre></div>
</div>

<li><div class="frame" id="frame-1829690549864">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py"</cite>,
      line <em class="line">2015</em>,
      in <code class="function">delete</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>state = attributes.instance_state(instance)</pre>
<pre class="line before"><span class="ws">        </span>except exc.NO_STATE as err:</pre>
<pre class="line before"><span class="ws">            </span>util.raise_(</pre>
<pre class="line current"><span class="ws">                </span>exc.UnmappedInstanceError(instance), replace_context=err,</pre>
<pre class="line after"><span class="ws">            </span>)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self._delete_impl(state, instance, head=True)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _delete_impl(self, state, obj, head):</pre></div>
</div>

<li><div class="frame" id="frame-1829690549416">
  <h4>File <cite class="filename">"C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py"</cite>,
      line <em class="line">178</em>,
      in <code class="function">raise_</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># intermediary exception does not change, but we can't figure</pre>
<pre class="line before"><span class="ws">            </span># that out.</pre>
<pre class="line before"><span class="ws">            </span>exception.__cause__ = replace_context</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>raise exception</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre>
<pre class="line after"><span class="ws">            </span># credit to</pre>
<pre class="line after"><span class="ws">            </span># https://cosmicpercolator.com/2016/01/13/exception-leaks-in-python-2-and-3/</pre>
<pre class="line after"><span class="ws">            </span># as the __traceback__ object creates a cycle</pre>
<pre class="line after"><span class="ws">            </span>del exception, replace_context, from_, with_traceback</pre></div>
</div>
</ul>
  <blockquote>sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</blockquote>
</div>

<div class="plain">
  <form action="/?__debugger__=yes&amp;cmd=paste" method="post">
    <p>
      <input type="hidden" name="language" value="pytb">
      This is the Copy/Paste friendly version of the traceback.  <span
      class="pastemessage">You can also paste this traceback into
      a <a href="https://gist.github.com/">gist</a>:
      <input type="submit" value="create paste"></span>
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2449, in wsgi_app
    response = self.handle_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py&quot;, line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py&quot;, line 163, in dispatch_request
    return meth(*args, **kwargs)
  File &quot;C:\Users\admin\PycharmProjects\TrainingTask\app.py&quot;, line 112, in delete
    db.session.delete(data)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py&quot;, line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py&quot;, line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File &quot;C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py&quot;, line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped</textarea>
  </form>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2012, in delete
    state = attributes.instance_state(instance)
AttributeError: 'NoneType' object has no attribute '_sa_instance_state'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2449, in wsgi_app
    response = self.handle_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\_compat.py", line 39, in reraise
    raise value
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\app.py", line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 89, in view
    return self.dispatch_request(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\flask\views.py", line 163, in dispatch_request
    return meth(*args, **kwargs)
  File "C:\Users\admin\PycharmProjects\TrainingTask\app.py", line 112, in delete
    db.session.delete(data)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\scoping.py", line 162, in do
    return getattr(self.registry(), name)(*args, **kwargs)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\orm\session.py", line 2015, in delete
    exc.UnmappedInstanceError(instance), replace_context=err,
  File "C:\Users\admin\AppData\Local\Programs\Python\Python36\lib\site-packages\sqlalchemy\util\compat.py", line 178, in raise_
    raise exception
sqlalchemy.orm.exc.UnmappedInstanceError: Class 'builtins.NoneType' is not mapped

-->

11:37:29.090 [main] INFO  com.intuit.karate - karate.env system property was:  
11:37:29.094 [main] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/users
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

11:37:29.107 [main] DEBUG com.intuit.karate - response time in milliseconds: 9.83
1 < 200
1 < Content-Length: 1565
1 < Content-Type: application/json
1 < Date: Tue, 31 Mar 2020 06:07:29 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
[
  {
    "email": "balaji@gmail.com", 
    "id": 1, 
    "name": "balaji", 
    "password": "sai"
  }, 
  {
    "email": "ram@gmail.com", 
    "id": 2, 
    "name": "ram", 
    "password": "sai"
  }, 
  {
    "email": "Lusy12@gmail.com", 
    "id": 3, 
    "name": "Lusy", 
    "password": "1234we"
  }, 
  {
    "email": "john@gmail.com", 
    "id": 6, 
    "name": "John Smith", 
    "password": "balaji"
  }, 
  {
    "email": "jack@gmail.com", 
    "id": 8, 
    "name": "jack", 
    "password": "jack"
  }, 
  {
    "email": "john@gmail.com", 
    "id": 9, 
    "name": "john", 
    "password": "john"
  }, 
  {
    "email": "mary@gmail.com", 
    "id": 13, 
    "name": "mary", 
    "password": "mary"
  }, 
  {
    "email": "jackson@gmail.com", 
    "id": 14, 
    "name": "jackson", 
    "password": "jackson"
  }, 
  {
    "email": "henry@gmail.com", 
    "id": 15, 
    "name": "henry", 
    "password": "henry"
  }, 
  {
    "email": "magrit@gmail.com", 
    "id": 17, 
    "name": "magrit", 
    "password": "henry"
  }, 
  {
    "email": "harley@gmail.com", 
    "id": 18, 
    "name": "harley", 
    "password": "henry"
  }, 
  {
    "email": "harley@gmail.com", 
    "id": 19, 
    "name": "harley", 
    "password": "henry"
  }, 
  {
    "email": "harley@gmail.com", 
    "id": 20, 
    "name": "harley", 
    "password": "henry"
  }, 
  {
    "email": "harley@gmail.com", 
    "id": 21, 
    "name": "harley", 
    "password": "henry"
  }, 
  {
    "email": "harley@gmail.com", 
    "id": 22, 
    "name": "harley", 
    "password": "henry"
  }
]


11:37:29.129 [main] INFO  com.intuit.karate - karate.env system property was:  
11:37:29.143 [main] DEBUG com.intuit.karate - request:
1 > GET http://127.0.0.1:5000/user/2
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)

11:37:29.158 [main] DEBUG com.intuit.karate - response time in milliseconds: 14.34
1 < 200
1 < Content-Length: 83
1 < Content-Type: application/json
1 < Date: Tue, 31 Mar 2020 06:07:29 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
{
  "email": "ram@gmail.com", 
  "id": 2, 
  "name": "ram", 
  "password": "sai"
}


11:37:29.175 [main] INFO  com.intuit.karate - karate.env system property was:  
11:37:29.181 [main] DEBUG com.intuit.karate - request:
1 > PUT http://127.0.0.1:5000/user/13
1 > Accept-Encoding: gzip,deflate
1 > Connection: Keep-Alive
1 > Content-Length: 58
1 > Content-Type: application/json; charset=UTF-8
1 > Host: 127.0.0.1:5000
1 > User-Agent: Apache-HttpClient/4.5.11 (Java/1.8.0_241)
{"name":"mary","email":"mary@gmail.com","password":"mary"}

11:37:29.196 [main] DEBUG com.intuit.karate - response time in milliseconds: 14.05
1 < 200
1 < Content-Length: 25
1 < Content-Type: text/html; charset=utf-8
1 < Date: Tue, 31 Mar 2020 06:07:29 GMT
1 < Server: Werkzeug/0.16.1 Python/3.6.6
User Updated Successfully

